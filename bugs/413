{"status": "resolved", "priority": "bug", "title": "git mission should ask you to configure git properly", "milestone": "0.11.09", "superceder": "", "nosylist": ["aldeka, aviendhaSL, grumler, palhmbs, paulproteus"], "assigned": "paulproteus", "waitingon": "", "keywords": [], "id": "413", "files": [{"url": "http://openhatch.org/bugs/file320/0001-Addition-of-new-git-config-step.patch", "author": "palhmbs"}, {"url": "http://openhatch.org/bugs/file350/0001-Template-changes1.patch", "author": "palhmbs"}, {"url": "http://openhatch.org/bugs/file410/git-mission-helps-you-install.patch", "author": "paulproteus"}], "history": [{"message": "I'm deploying this now, and marking it as resolved.\n\nThanks for the discussion, patches, and feedback!\n   \n", "author": "paulproteus"}, {"message": "(the one to review is\n<a href=\"http://openhatch.org/bugs/file410/git-mission-helps-you-install.patch\">http://openhatch.org/bugs/file410/git-mission-helps-you-install.patch</a> )\n   \n", "author": "paulproteus"}, {"message": "Also, the patch series is now actually attached!\n   \n", "author": "paulproteus"}, {"message": "Adding grumler to the nosy list.\n   \n", "author": "paulproteus"}, {"message": "The attached patch creates a new git mission step that asks you to run \"git\nconfig --global user.email\" (etc.) and also tells you how to install git.\n\nI would like review, from maybe palhmbs or aldeka, to see if this passes muster.\n\n(Paul, you might be particularly interested in how I moved the validation into\nthe Django form object.)\n   \n", "author": "paulproteus"}, {"message": "Pushing to 0.11.09 for now. I personally hope to get to this soon.\n   \n", "author": "paulproteus"}, {"message": "Sure, paulproteus, it's fine by me cause I'm real busy with stuff at the moment.\n   \n", "author": "palhmbs"}, {"message": "Hi Paul,\n\nIs it okay if I try to re-work your tests so they work, and ship them during \n0.11.07? If so I will try to. Otherwise I will push this to 0.11.09 and see if \nyou or someone else has bandwidth for it.\n\nLet us know on the bug! I don't want to take it away if you're hacking on it or \nhaving fun with the plan of hacking on it in the future.\n   \n", "author": "paulproteus"}, {"message": "On self.client vs client: The only important thing is that you make sure that the \nDjango test client object comes from the login_with_client() function.\n\nI *think* that there's a built-in self.client that is not logged-in, so it can be \nconfusing.\n\nThat's my recollection off the top of my head, and it's what I was thinking when \nI wrote that comment.\n\nNow, finally marking as in-progress. Sorry about the long latency!\n   \n", "author": "paulproteus"}, {"message": "Sliding into July milestone, since it's July.\n   \n", "author": "palhmbs"}, {"message": "Hi Paul,\n\nAsheesh asked me to have a look at this. It looks like a bunch of this conversation happened on \nIRC, which makes it hard for me to understand the state in this thread, but here's at least some \nfeedback:\n\n&gt; 2. Q: Why _should_ I handle the validation differently? Why is it sub-optimal?\n\nIt's sub-optimal because we shouldn't roll our own way of validating e-mail addresses that \npenalizes addresses containing certain keywords when there are existing, correct ways of validating \ne-mail addresses.\n\n&gt; really what is stopping someone typing in _any_ valid email address?\n\nThe question to ask, then, is if you actually care about verifying what `git config user.email` is set \nto. You're right -- we can never know that they are using their correct address, and if that's the only \nvaluable test then we just shouldn't test it and move on.\n\n&gt; So why are you telling me... \"I would also assert that the mission step hasn't been\n&gt; successfully completed, or some other deeper check.\"  when the actual test _is_\n&gt; asserting that the mission step hasn't been completed? eg:\n&gt; \"self.assertFalse(controllers.mission_completed(paulproteus, 'git_config'))\" @\n&gt; line #71.\n\nI think Asheesh just didn't see in the moment that this function was called from a test that does \nmake that check.\n\nPaul: thanks a ton for all the work you've been doing on OpenHatch. I'm sorry you are getting \nfrustrated with the back and forth of reviews, but stick with it. Also, you might find it satisfying to \nwork on some smaller tickets for a bit, for the satisfaction of closing out a bunch without so much \nback and forth.\n\nI'll keep this in review so Asheesh can comment on Q1, which seems to have been discussed on IRC. \n`self.client` is used exclusively over a local `client` in mysite/missions/git/tests.py, so I don't \nunderstand Asheesh's comment either (but I also only skimmed the file).\n   \n", "author": "jesstess"}, {"message": "Hi Paul! I missed your response to my review, and I will give this a fresh look.\nMarking as need-review so it shows up in my query.\n\n(-:,\n\n-- Asheesh.\n   \n", "author": "paulproteus"}, {"message": "So in trying to correct the problems that you have pointed out, I'm getting\nreally, really confused...\n\n1. Q: What's the difference between current self.client.post() and client.post()\n- Hasn't everybody else used it?\n   ** self.cient is the result of self.login_with_client() @ line #27\n\n2. Q: Why _should_ I handle the validation differently? Why is it sub-optimal?\n  ** Ok, I get your point that my tests are gonna fail somebodies valid email\naddress, but really what is stopping someone typing in _any_ valid email address? \n  ** It's not like we're doing a double-opt-in sign-up here (but maybe we should\nbe?).\n  ** Hey, at least once they do type in a invalid email they are told what's\nwrong with it!\n  ** I also have tested the functions I created manually and not just with the\nunit test.\n\n3. Q:  This isn't a test by itself. right? --&gt; def\nemail_address_is_rejected(self, email_address): \n   So why are you telling me... \"I would also assert that the mission step\nhasn't been\nsuccessfully completed, or some other deeper check.\"  when the actual test _is_\nasserting that the mission step hasn't been completed? eg:\n\"self.assertFalse(controllers.mission_completed(paulproteus, 'git_config'))\" @\nline #71.\n\n4. Q: Maybe you were having a bad day when you reviewed this patch?\n\nFor me to take the time to get patches corrected and then have another set of\nhoops to jump through is really quite depressing, but then again, thanks heaps\nfor taking the time to review all these git mission patches!!\n   \n", "author": "palhmbs"}, {"message": "Updated templates, whitespace error fixed. \n\nWhat inherent dangers are there when disabling the built-in Django template\nescaping? I thought since I created the error which is being sent to the\ntemplate that it would be 'clean' enough not to break things. :P\n   \n", "author": "palhmbs"}, {"message": "I can't accept the \"git config\" tests yet because of this:\n\n+    def test_do_git_description_mission_incorrectly(self):\n+        self.assertFalse(self.email_address_is_rejected('<a href=\"mailto:paulproteus@pathi.local\">paulproteus@pathi.local</a>'))\n\nYou seem to assert that <a href=\"mailto:paulproteus@pathi.local\">paulproteus@pathi.local</a> should *not* be rejected\n(assertFalse + the method name). That strikes me as incorrect; it should *be*\nrejected.\n\nAlso, in \"def email_address_is_rejected\", checking the status code is a good\nfirst step, but I would also assert that the mission step hasn't been\nsuccessfully completed, or some other deeper check.\n\nAlso, your test is kind of messy: You will reject any email address that has\n\"host\" or \"local\" in it, but that means you'll reject \"<a href=\"mailto:asheesh@mywebhost.com\">asheesh@mywebhost.com</a>\"\n(for example) and \"<a href=\"mailto:asheesh@localtv.com\">asheesh@localtv.com</a>\". As I think this through, I wonder: can\nyou just use the Django built-in EmailField to do the validation part? See also\n<a href=\"https://docs.djangoproject.com/en/dev/ref/forms/fields/\">https://docs.djangoproject.com/en/dev/ref/forms/fields/</a>\n\nI would suggest that you extract the email checking functionality into a\ndifferent function (probably, make it part of the def clean_email() in the\nDjango form you're using -- and actually, if you make it an EmailField, you can\nuse Django's built-in email checking)... actually, it *is* already an email\nfield! Hmm.\n\nI would suggest you rewrite your email-validity-checks to use the Form class,\nrather than the Django view, so that you can just straightforwardly check if the\nform validation will accept e.g. pathi.local.\n\nAlso, in the template, rather than passing HTML in from the Python code, you\ncould just take the string the Python passes in and surround it as necessary\nwith HTML. For example, instead of\n\n{{ var|safe|escape }}\n\nmaybe\n\n&lt;strong&gt;{{ var|safe|escape }}&lt;/strong&gt;\n\nDisabling the built-in Django escaping is something I don't like doing lightly,\nbut if in this case you need it and you know it's a safe thing to do, that's okay.\n\nYou're on the right track, and your git commit message is way clearer and easier\nto read than they used to be!\n   \n", "author": "paulproteus"}, {"message": "Again, I've seperated out the patch, 1 for only the templates - this time I've\nadded an var|safe|escape to the about_git.html template, so that I could bold a\nerror message.\n\nAlso a patch for the rest, which includes:\nurls.py, fixtures/initial_data.json, git/forms.py, git/views.py &amp; git/tests.py.\n\nMy tests pass!\n   \n", "author": "palhmbs"}, {"message": ":(\n   \n", "author": "palhmbs"}, {"message": "These are the template changes, in a seperate commit from the backend changes (views.py, \ncontrollers.py, tests.py, forms.py).\n   \n", "author": "palhmbs"}, {"message": "I think you missed addressing the issue about the form not showing an error message when it's not \nvalid - could you please help me to figure that out\n\nIt should show an error when there is an error, but it not.\n   \n", "author": "palhmbs"}, {"message": "One more thing: It seems that the use of tabs in the source is due to Mark, not\ndue to you. Sorry about being sloppy about that in the review.\n\n(and I guess I let these tab characters get into the source, so mega mea culpa)\n   \n", "author": "paulproteus"}, {"message": "Hi Paul,\n\nI think I can see some things that are going wrong here. But first of all, can\nyou *please* submit your work in smaller fragments? For example, the fixes to\nabout_git.html don't have to be in the same massive commit as these other changes.\n\nIf you create smaller commits, then you can feel happy about the smaller pieces\nof work that are definitely correct, but moreover I can deploy them\nindependently of other work that is not yet ready.\n\nIf you need help with the git tools in order to make smaller commits, I am quite\nhappy to provide it. It's quite possible to take an existing commit and separate\nit out into different commits, and that would make both of our lives easier.\n\nOkay, as for this test: here's what I said on IRC last night:\n\n&lt;paulproteus&gt; I suspect self.client is not logged in\n&lt;paulproteus&gt; use client = self.login_with_client()\n&lt;paulproteus&gt; then client.post()\n&lt;paulproteus&gt; Times like these, I often do 'print response' in the tests, to see\nwhat it is\n\nHave you tried doing 'print response' to see what exactly you're getting? You\nsaid you're getting an HTTP 302; that's a redirect. That either means that the\nview is asking the \"client\" to log in, or that the POST submission succeeded\nwithout error.\n\nIn general, don't use self.client. Use a local variable in your test called\n\"client\" that you get as a result of calling self.login_with_client().\n\nAlso, you have some English style issues: You wrote, \"Now let's get Git setup\"\nbut (for American English, at least) it should be \"Now let's get Git set up\".\n\nSome other issues: In the patch, I see a change to the indenting of the\nHttpResponseRedirect at the end of \"def resetrepo\". Why change the indenting?\nYou also seem to be mixing tabs and spaces, which is generally bad news for\nPython code. Please just use spaces.\n\n<a href=\"http://develop.participatoryculture.org/index.php/CodingStandards\">http://develop.participatoryculture.org/index.php/CodingStandards</a> has some\ngenerally high-quality code style guidelines. \n\nYou're on the right track. I think that if you work to answer my questions about\nlogging the user in, you can get this finished. Let me know how it goes.\n   \n", "author": "paulproteus"}, {"message": "Ok, this is almost it - I need some feedback though cause the test isn't passing \nand the form isn't showing error messages when it's not valid (just returns to the \npage without an error message).\n   \n", "author": "palhmbs"}, {"message": "See IRC logs from right now (May 7, 2011, 16:29 US/Eastern) for the review \nI gave palhmbs.\n\nThe big missing piece is a test.\n   \n", "author": "paulproteus"}, {"message": "I have created a new step in the About Git page, as needed - renamed About Git \nto Setup Git. Added another form and initial.json entry for git_config.\n\nThis git_config is #13, which will conflict with the bash mission index #13.\n\nI'm also not sure about the validation - I have setup the form with a EmailField,\nin the new ConfigForm. \nI thought this would be enough validation, but I'm not sure.\n\nPlease review!\n   \n", "author": "palhmbs"}, {"message": "I have already created another issue for the --global thing. But that's ok.\n\nI'll try to fix all this up today, including making them paste the output of git \nconfig --global user.email &amp; validating it.\n   \n", "author": "palhmbs"}, {"message": "The patch here needs some work, but it's getting there. Here's what I think needs \nbeing changed:\n\n* You use em dashes, rather than hyphens, in the \"git config --global\" parts of the \ndocs. It seems that that is live right now, so I realize I should have caught those \nearlier, but these commits should really fix that. (If you don't see what I mean, \ntry copy-pasting what you said.)\n\n* A default email address should be <a href=\"mailto:me@example.com\">me@example.com</a> (example.com is actually \nreserved for this use; see <a href=\"http://www.ietf.org/rfc/rfc2606.txt\">http://www.ietf.org/rfc/rfc2606.txt</a> )\n the \"next\" link \n\n* I would prefer, slightly, that we actually validate that the user has configured \nthings in a reasonable way. Like asking them to paste the output of 'git config --\nglobal user.email' and making sure it has an @ sign in it. But I guess if we make \nthe experience super clear, we don't *have* to do that.\n\nThose are my thoughts; let me know if I missed something.\n   \n", "author": "paulproteus"}, {"message": "I've moved the block, Preparing for the Mission to the Start page.\nHopefully this resolves this issue and <a href=\"issue414\">issue414</a>.\n\nPlease review.\n   \n", "author": "palhmbs"}, {"message": "I definitely think we should fix this pronto!\n   \n", "author": "palhmbs"}, {"message": "Right now, for someone new to git, you may not have the git email address and \nname properly configured.\n\nWe could ask people to configure git to user their OpenHatch email address, and \nthen ask them to print it back out with:\n\n$ git config user.email\n<a href=\"mailto:user@host.example.com\">user@host.example.com</a>\n\nand then ask them to paste the email address it printed back to them into the \nfield (for the validation step of the mission step).\n   \n", "author": "paulproteus"}]}