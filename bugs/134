{"status": "resolved", "priority": "bug", "title": "Map is too slow to be useful", "milestone": "0.11.05", "superceder": "", "nosylist": ["nelson, palhmbs, paulproteus, zathras"], "assigned": "paulproteus", "waitingon": "", "keywords": ["performance"], "id": "134", "files": [{"url": "http://openhatch.org/bugs/file82/geocode_openhatch.tar.bz2", "author": "palhmbs"}, {"url": "http://openhatch.org/bugs/file93/geocoder.php", "author": "zathras"}, {"url": "http://openhatch.org/bugs/file92/open_python_geodecoder.tgz", "author": "zathras"}, {"url": "http://openhatch.org/bugs/file99/open_python_geodecoders.tgz", "author": "zathras"}], "history": [{"message": "The OpenHatch map is:\n\n* Now a LOT simpler, in terms of implementation -- look at map-v2.js in the\nOpenHatch source code\n\n* Uses OpenLayers, not Google Maps\n\n* A BAJILLION times faster, thanks basically entirely to Christopher Schmidt who\nshowed me the way.\n\nI am marking this resolved. The new map comes with a lot of bugs, and I haven't\nfiled them all, but oh my god this is so exciting.\n   \n", "author": "paulproteus"}, {"message": "Advice from IRC:\n\n&lt;crschmidt&gt; paulproteus: The permance sucking happens because you're trying to \nput 5000 DOM elements into a single container.\n\nAlso, crschmidt put <a href=\"http://openhatchbrowsertest.appspot.com/\">http://openhatchbrowsertest.appspot.com/</a> together as a demo \nof how it can work.\n\n<a href=\"https://github.com/crschmidt/openhatchbrowser\">https://github.com/crschmidt/openhatchbrowser</a> has source.\n\nI can try to implement this shortly.\n   \n", "author": "paulproteus"}, {"message": "Moving this to 11.05 milestone since it's unlikely to get into the 'very short' \nApril milestone.\n   \n", "author": "palhmbs"}, {"message": "Marking this as deferred as it was agreed in todays meeting --\nRef: <a href=\"https://openhatch.org/meeting-irc-logs/weekly/2011-04-02.log.html\">https://openhatch.org/meeting-irc-logs/weekly/2011-04-02.log.html</a>\n\nI think we should wait on zathraz's database patch ( <a href=\"https://openhatch.org/bugs/\">https://openhatch.org/bugs/</a>\n<a href=\"issue175\">issue175</a> ) and land these both together.\n   \n", "author": "palhmbs"}, {"message": "I will work on this during the week.\n   \n", "author": "paulproteus"}, {"message": "Need help with modifying the database to have the field for persons longitude &amp; \nlatitude. This field will need to be updated at user creation / when they change \ntheir location. - We will use this field for a mysql query that then can be used \nwith the python cluster code.\n   \n", "author": "palhmbs"}, {"message": "Found a python implemented clusterer here... \n<a href=\"http://forum.mapaplace.com/discussion/3/server-side-marker-clustering-python-\">http://forum.mapaplace.com/discussion/3/server-side-marker-clustering-python-</a>\nsource-code/\n   \n", "author": "palhmbs"}, {"message": "library of functions in python\nconfigurable to use a geocoder API and service of choice\nvarious services and APIs supported\nnot all data in the locationDisplayname name field is compatible with all\ncoders/APIs\ntest is incuded in the script. Script is independent of OH code but functions\nshould be easy to link into OH code\n   \n", "author": "zathras"}, {"message": "PHP code attached and PHP code as pasted in msg are identical.\nWould have prefered to remove the code but I have no idea how to do that. Sorry.\n   \n", "author": "zathras"}, {"message": "PHP based XML open geodecoder, used as initial proof of concept\n   \n", "author": "zathras"}, {"message": "added open (free) non-Google geodecoder\nneeds further testing\n   \n", "author": "zathras"}, {"message": "Text export of piratepad discussion on the subject between Zathras, PaulProteus\nand Pythonian4000 ;\n\n\n \n<a href=\"issue134\">Issue 134</a>: Map is too slow to be useful \n<a href=\"https://openhatch.org/bugs/issue134\">https://openhatch.org/bugs/issue134</a> \n \nAdditional remark: current implementation uses non-foss data (google maps) while\nexcellent foss sw and data is available: openstreetmap + openlayers \n \nConstraints: \n* mapping sw usually uses javascript with some code around it. As Openhatch is\nimplemented fully in Python it is desirable to let the additional code be in\npython. \nNote: PaulProteus is willing to let the additional code be in another language\nunder certain conditions \n* used techniques sw must be available on the openhatch server and should be\neasy to deploy on people wanting to run their own openhatch server without\ngenerating a loot of extra support/problems \n \nThere can be numerous reasons why the current implementation is slow. On IRC\nthere has been some discussion on this some time ago. \nRe-implementing the map might speed things up but the main problems are likely\nthe way the map is created and presented. \n* a location of a person (if available and public) must be transformed from an\naddress/place/state/country etc to coordinates (longitude/latitude). This\nprocess is called geocoding. Currently this is done for every entry (person) in\nthe database during mapcreation. Storing these coordinates in the DB would\nimprove speed. \n* markers. All Markers are positioned on the map in one go. This takes time when\ngenerating the map. But mainly displaying and updating (moving/changing view is\nvery slow. Better woul be to just display only relevant markers and those who\ncan actually be seen (not located behind an other marker etc). Relevant would\nbe: display only those people interested or skilled in X in a distance of Y\naround me. \n \nPossible implementations \n- ODOPOI : <a href=\"http://wiki.openstreetmap.org/wiki/Odopoi\">http://wiki.openstreetmap.org/wiki/Odopoi</a> \n  Pros: \n  * seems to do exactly what we need at first glance \n  * uses openstreetmap data \n  Cons: \n  * project is run by a single person (student) \n  * project is in beta stage \n  * has a dependencies list which might be troublesome (check with paulproteus):\n<a href=\"https://github.com/tcort/odopoi/blob/master/INSTALL\">https://github.com/tcort/odopoi/blob/master/INSTALL</a> \n  * requires an extra database \n  * is written in php, not python \n- .... ?\n  open for alternatives with dynamic marker management\n\nIf we stick to using Google Maps, it should be \"easy\" to use a marker manager.\n\nLooking for such things for OpenLayers...\n<a href=\"http://drupal.org/node/622720\">http://drupal.org/node/622720</a>\n\n\"There is clustering, but this will not improve performance per-say as it  still\nneeds to load all the features to cluster.  There is also the  BBox strategy as\nwell.\"\n\nIf OpenLayers really has marker clustering built in, then that's enough I think!\n\nOL is a universal display layer. Using Gmaps or OSM is not an issue at that point\n\n<a href=\"http://dev.openlayers.org/releases/OpenLayers-2.7/doc/apidocs/files/OpenLayers/Strategy/Cluster-js.html\">http://dev.openlayers.org/releases/OpenLayers-2.7/doc/apidocs/files/OpenLayers/Strategy/Cluster-js.html</a>\n<a href=\"http://trac.osgeo.org/openlayers/browser/trunk/openlayers/examples/strategy-bbox.html\">http://trac.osgeo.org/openlayers/browser/trunk/openlayers/examples/strategy-bbox.html</a>\n<a href=\"http://trac.osgeo.org/openlayers/browser/trunk/openlayers/examples/strategy-cluster-threshold.html\">http://trac.osgeo.org/openlayers/browser/trunk/openlayers/examples/strategy-cluster-threshold.html</a>\n\nI think strategy-cluster is what we need.\nCheck the ODOPOI sample site ( map of canada). It's quite fast\n    Neat; /me reads\n    Wow, that is awesome. Super fast.\n    Can we maybe look at how they're using OpenStreetMap, javascript wise? If we\njust use ODOPOI, we'd lose some features of the people browsing interface\n(unless we re-wrote them in PHP, I guess?)\n        /me reads the code\n        This is smart:\n        // Remove markers that aren't within the bounds of the visible part of\nthe map at the current zoom level\n        // Keep markers that are within the bounds of the visible part of the\nmap at the current zoom level\n        Add to that: some code so that overlapping markers are handled....\n        \n\nIf we have a rewrite of his code it would \"map\" our needs. Would require however\nquite some code.\nAdvantages:\nbetter \"mapping\" of needs\ncan be done in Python\nfixes the need for an extra DB\nCons:\nit's in Python (I am not really good at that)\nneeds a lot of coding and testing\nwill need more maintenance as it's our own code\n\n\n\nI think the next steps are to just try reimplementing the map we have using\nOpenStreetMap.\n\nI think I'm learning a lot just by reading this JavaScript of ODOPOI.\n\nIt would be pretty easy to write some Python that generated the same sort of\noutput as their PHP code. And then we could basically use the same JavaScript,\nwhich somehow is really pretty simple.\n\nZathras: How's your Javascript? Decent enough?\nI am ok in Java and PHP. JS is so-so\nbut I do not mind writing it\npython would be cool too, but not really fast as I will need to learn another\nlanguage\nnot that that is so difficult but things are quicker if you are more accustomed\nto it already\nNah, that's not a problem. About 2/3 of the languages I know are self-taught on\nthe job ^_^ (Perl was... interesting...)\nsame here....\n\nI see, okay!\n\nI think that there are two major paths forward.\n\n1. Try adding a MarkerManager to Google Maps version.\n    Pro: Release soon.\n    Con: the code will still suck.\n\n1.5. Rewrite *and* use a marker manager, like Fluster\n&lt;<a href=\"http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/\">http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/</a>&gt;\n\n2. Switch to OpenStreetMap, and follow the same strategies from JavaScript as\nODOPOI uses.\n\n    I like this option a *lot*. I like the idea of rewriting \n    I think sooner or later you will want to rewrite anyway. Beter do it earlier\nin the process\n    +1\n    Plus then we can ditch using Google. Google Maps is hip but non-free, and\nlet's be free(dom) where we can be. (-:\n    \n    BTW, we could ask the ODOPOI person to write down the important tips he/she\nused to make that map fast. Maybe send that person an email?\n        It seems that the big thing is that the ODOPOI map doesn't show all\nmarkers at once. If you're zoomed-out, it shows just one item, even though if\nyou were to zoom in you would see more than one.\n            The downside of this strategy is you don't get a sense of the\ndensity of people.\n                With e.g.\n<a href=\"http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/\">http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/</a> you\ndo get a nice visual sense.\n\nSo if we go down route (2), what are the next steps or milestones? For one, I\nhave to fix the data import bug that Zathras ran into.\nBTW. I have a huge lag on this page and also the chatbox is gone\n\n10 weeks ago I had some email exchange with him. I can copy/paste here?\n\nSure\n\n\n\nFull View\nRe: q: odopoi\n...\nFrom:\nThomas Cort linuxgeek __A-T--- gmail.com\n...\nAdd to ContactsTo:Me\n&gt; 1. Your project is written in PHP. The project with a GoogleMap\n&gt; (<a href=\"http://www.openhatch.org\">www.openhatch.org</a>) is written in Python. The main developers would like as\n&gt; little \"alien\" code as possible. Am I right in the assumption that most PHP code\n&gt; is related to getting data (download) and extracting data?\n\nNo. A shell script gets the data, a C program extracts the data, and 2\nshort PHP scripts do some database cleanups.\n\nMost of the PHP code is used to serve the map and provide an API for\nthe Javascript to query the database for marker information.\n\n&gt; 2. Am I right in thinking this is not needed for our project as we do not need\n&gt; OSM markers and have our own.\n\nFor a pure python solution you'd need to rewrite some of the PHP code,\nbut there isn't much code and it doesn't do anything fancy.\n\n&gt; 3. If we want to use out own markers we would need a script to geocode location,\n&gt; insert longitude/latitude in odopoi DB. Can you give any details on what should\n&gt; be into taken consideration when doing this?\n\nThe only thing that you need to worry about is the minimum zoom level\nthat you want each marker to be visible at. In utl/zoom-calc.php,\nthere is code that precomputes the minimum zoom level for each marker\nin the database such that no markers overlap.\n\n&gt; 4. I should write a script to keep odopoi DB and our DB in sync. Any hints on\n&gt; what the constraints would be?\n\nI don't know your DB so I don't know how to answer that.\n\n&gt; 5. POI functionality: marker should display info or have an other effect. How is\n&gt; this taken care of? I see some XML with descriptions. How is this handled? Can\n&gt; it be adapted and extended? Can external code be used for this?\n\nMy demo at <a href=\"http://opendatamap.ca\">http://opendatamap.ca</a> has this functionality. It's pretty\neasy to change the appearance/functionality with some Javascript.\n\n-Thomas\n\n\n\nRight-o. So I guess the most important thing is the util/zoom-calc.php, which is\nwhat chooses *which* markers to show at the various zoom levels. That means that\nif we rewrite that, we can choose what to show. For example, a circle with a\nnumber inside! (For now, we should stick to the original behavior, in my\nopinion, so that we can ship it sooner rather than later.)\n\nGood to hear that Thomas thinks it would be pretty easy to rewrite in Python.\n\nBack to your milestone sum up:\n- fix db importer: would be nice, but at present I have a db table with like\n3000+ people in it\nprobably a lot with no public data, but I hope some usefull stuff too. SO a DB\nfix is probably not the highest prio\n    okay, good to know\n- analyse ODOPOI and see how it works, maybe do a little experiment with it\n- look at current implementation in OH\n- start coding. Could be tricky due to lack of serious python skills but there\nis only one way to find out :P (-:\n\n    yeah! from reading the JavaScript, it seems that their *biggest* difference\nis that they do *way* more work on the server.\n\nHope this was/is a bit informative and a way forward\n\nYeah! (-:\n\nI've also definitely learned something about ODOPOI and how they make the web\napp fast (simple -- don't do much in JS).\n JS is slow \nthere is even such a thing as server sided JS. Quite kinky\nNever dared to do anything with it\n\nThe less you do on the client the less you run into browser compatability issues\ntoo.....\n\nBTW I have have done some coding for geocoding:\nShould be easy to adapt to OH\n\n#!/usr/bin/php5\n&lt;?php\n  $nl=\"\\n\\r\";\n\n  // connect to database\n  $db_host = \"localhost\";\n  $db_name = \"oh_milestone_a\";\n  $db_user = \"oh_milestone_a\";\n  $db_pwd  = \"ahmaC0Th\" ;\n\n  $dbConnection = mysql_pconnect($db_host, $db_user, $db_pwd);\n  if ( !mysql_ping($dbConnection) ) {\n    // when timed out reconnect\n    $dbConnection = mysql_pconnect($db_host, $db_user, $db_pwd);\n  }\n  \n  $dbStatus = mysql_select_db($db_name, $dbConnection);\n  if (!$dbStatus) {\n    die ('Unable to select requisted database: '.mysql_error().$nl);\n  }\n  \n  // table  : profile_person\n  // fields : id        interested_in_working_on        gotten_name_from_ohloh \nuser_id         last_polled     show_email \n     photo   photo_thumbnail         location_display_name  \ndont_guess_my_location  location_confirmed      bio     homepage\n_url    contact_blurb   photo_thumbnail_30px_wide       expand_next_steps      \nphoto_thumbnail_20px_wide       email_me_weekly_re_projects \n  $query=sprintf(\"SELECT * FROM profile_person\");\n  $resultset = mysql_query($query);\n  if (!$resultset) {\n    die ('Invalid query: '.mysql_error().$nl);\n  }\n\n  // create KML/XML document\n  while ($row = mysql_fetch_assoc($resultset)) {\n    $userID=$row['user_id'];\n    printf($nl.\"user_id               : \".$userID.$nl);\n    $locationDisplayname = $row['location_display_name'];\n\n//for testing purposes\n$locationDisplayname = \"Philadelphia, PA, United States\";\n\n    printf(\"location_display_name : \".$locationDisplayname.$nl);\n    $locationConfirmed = $row['location_confirmed'];\n/*\n    printf(\"location_confirmed: \".$locationConfirmed.\n\"(\".strlen($locationConfirmed).\")\".$nl);\n    if ( strlen(trim($locationConfirmed)) &gt; 0 ) {\n      $normalizedLocation=str_replace(\" \", \"+\", $locationConfirmed);\n    }\n    else {\n      $normalizedLocation=str_replace(\" \", \"+\", $locationDisplayname);\n    }\n*/\n    $normalizedLocation=str_replace(\" \", \"+\", $locationDisplayname);\n    \n    printf(\"Normalized location   : \".$normalizedLocation.$nl);\n    if (strlen($normalizedLocation) == 0 ){\n      die ('No location specified for used_id='.$userID.$nl);\n    }\n\n    // provider : <a href=\"http://www.gisgraphy.com/\">http://www.gisgraphy.com/</a>\n    $doc = new DOMDocument();\n    $doc-&gt;formatOutput = true;\n   \n$geoURL=\"<a href=\"http://services.gisgraphy.com/fulltext/fulltextsearch?q=\">http://services.gisgraphy.com/fulltext/fulltextsearch?q=</a>\".$normalizedLocation.\"&amp;placetype=&amp;country=&amp;lang=&amp;format=XML&amp;style=FULL&amp;indent=true&amp;from=1&amp;to=2\";\n    printf(\"Geo URL               : \".$geoURL.$nl);\n    $doc-&gt;load($geoURL);\n\n    $xpath = new DOMXpath($doc);\n    $elements = $xpath-&gt;query(\"/response/result/doc/double\");\n/*    \n    foreach ($elements as $elem) {\n      printf(\"Node: \".$elem-&gt;nodeName);\n      $tagname = $elem-&gt;localName;\n      printf(\" \".$tagname.\" \");\n      printf(\" = \");\n      printf(($elem-&gt;nodeValue).$nl);\n    }\n*/\n    $lat=$elements-&gt;item(2)-&gt;nodeValue;\n    $lng=$elements-&gt;item(3)-&gt;nodeValue;\n\n    printf(\"Latitude              : \".$lat.$nl);\n    printf(\"Longitude             : \".$lng.$nl);\n\n  }\n  \n  mysql_free_result($resultset);\n  \n  // <a href=\"http://www.zipcodeworld.com/samples/distance.php.html\">http://www.zipcodeworld.com/samples/distance.php.html</a>\n  //\n<a href=\"http://snipplr.com/view/40956/use-google-maps-api-to-get-latitude-and-longitude/\">http://snipplr.com/view/40956/use-google-maps-api-to-get-latitude-and-longitude/</a>\n  // \n?&gt;\n\nAdvantage: does use a free service\n   \n", "author": "zathras"}, {"message": "BTW - there a 1033 users in the test database - only 998 actually display on the \nmap - usernames start from testuser1 --- password is the same for all: testuser1\n   \n", "author": "palhmbs"}, {"message": "Talked to crschmidt - He recommends sticking with the Fluster2 implementation.\nStill happy to try to hack this solution out.\n   \n", "author": "palhmbs"}, {"message": "We could see if OpenStreetMap + OpenLayers has a decently fast solution for this\nsort of thing.\n\nNext step on that: join #openlayers and ping crschmidt (-:\n   \n", "author": "paulproteus"}, {"message": "Nice, Paul!\n\nSome collected thoughts:\n\n* If you have more than one file to attach, but not a whole lot of files, it's\neasier for me if you upload them separately. Your tar.bz2 is okay, though, just\nsaying for the future.\n\n* <a href=\"http://sourceforge.net/projects/fluster/\">http://sourceforge.net/projects/fluster/</a> is the map clustering thing I'd want\nto try deploying.\n<a href=\"http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/\">http://blog.fusonic.net/2009/12/clustering-for-google-maps-v3-with-fluster2/</a> is\nan article about it.\n\n* A KML file alone, I think, won't solve the problem we're having, which is too\nmany markers on the map at once.\n<a href=\"http://blog.fusonic.net/2009/12/fluster2-011-with-significant-performance-improvements/\">http://blog.fusonic.net/2009/12/fluster2-011-with-significant-performance-improvements/</a>\ndiscusses that problem.\n   \n", "author": "paulproteus"}, {"message": "I got around to getting a test database working.\n\nIt highlights locally why why the current openhatch.org/\npeople/ is so slow...\n\nIncluding all files attached for your perusal,\n1. a couple are base scripts that I used to generate the \ndatabase.\n2. the other couple are the actual databases that I generated.\n\nI'll start work on figuring out how to get your site to \ngenerate a KML file every time somebody is\nadded.\n\nIMO - This is the best solution.\n   \n", "author": "palhmbs"}, {"message": "I think this would be a quick fix, really.\n\n<a href=\"http://www.mail-archive.com/google-maps-js-api-v3@googlegroups.com/msg05553.html\">http://www.mail-archive.com/google-maps-js-api-v3@googlegroups.com/msg05553.html</a>\nis a discussion started by Raffi (== dithyramble) to figure out what we can do.\n\nOne difficulty is that if you're not Asheesh, you don't have access to all the\nPerson objects in our database. (Locations are stored inside the Person.) That\nmeans that your local install won't have a lot of markers, so it'd be hard to\nreproduce the performance problem.\n\nYou could help with the data export bug if you want to address that -- see\n<a href=\"http://openhatch.org/bugs/issue156\">http://openhatch.org/bugs/issue156</a>\n   \n", "author": "paulproteus"}, {"message": "Try going to <a href=\"https://openhatch.org/people/?center=India\">https://openhatch.org/people/?center=India</a> and browsing around,\nzooming in and out. It's \"too slow to be effective\", as rindolf put it on IRC.\n\nCome to #openhatch on IRC and talk about it with us if you want to help fix it.\nWe could use the help!\n   \n", "author": "paulproteus"}]}