{"status": "resolved", "priority": "bug", "title": "500 error when visiting \"https://openhatch.org/customs/edit/<tracker>/<project>/url\" directly", "milestone": "0.12.02", "superceder": "", "nosylist": ["Mkman, RussiaM, berryp, paulproteus"], "assigned": "berryp", "waitingon": "", "keywords": ["bitesize"], "id": "713", "files": [], "history": [{"message": "I've merged this fix. Thanks, all -- (and if you want to look at what sort of\nchanges this required, do read the pull request)!\n   \n", "author": "paulproteus"}, {"message": "<a href=\"https://github.com/openhatch/oh-mainline/pull/13\">https://github.com/openhatch/oh-mainline/pull/13</a> has a pull request by berryp\n   \n", "author": "paulproteus"}, {"message": "Seeing as this is not assigned to anyone at the moment, whoever wants to give it\na look should assign it to themselves.\n   \n", "author": "paulproteus"}, {"message": "Russia (and all),\n\nThe fix for this would be somewhat straightforward.\n\nSteps:\n\n* Find the code in your text editor where the crash is occurring\n\n* Write a Django test (probably in mysite/customs/tests.py ) that can reproduce\nthe crash\n\n* Fix the code (probably adding a try/except) -- in the case of bad data, we\nshould return a HTTP Response of 400 Bad Request\n\n* Make sure the test passes now\n\n* Submit a patch/pull request with those changes\n\nIt's not trivial, but it's a good introduction to the way we do unit testing.\nYou should read our doc on Automated testing (on\nopenhatch.org/wiki/Automated_testing for now; soon to be moved into\nopenhatch.readthedocs.org) to see how that all works.\n   \n", "author": "paulproteus"}, {"message": "This should be a simple fix, if you know Python exception handling.\n   \n", "author": "paulproteus"}, {"message": "Traceback:\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/contrib/auth/decorators.py\" in _wrapped_view\n  23.                 return view_func(request, *args, **kwargs)\nFile \"/Users/berryp/projects/openhatch/mysite/customs/views.py\" in edit_tracker_url\n  232.             url_obj = all_trackers[tracker_type]['urlmodel'].objects.get(id=url_id)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/manager.py\" in get\n  132.         return self.get_query_set().get(*args, **kwargs)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/query.py\" in get\n  341.         clone = self.filter(*args, **kwargs)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/query.py\" in filter\n  550.         return self._filter_or_exclude(False, *args, **kwargs)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/query.py\" in _filter_or_exclude\n  568.             clone.query.add_q(Q(*args, **kwargs))\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/sql/query.py\" in add_q\n  1194.                             can_reuse=used_aliases, force_having=force_having)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/sql/query.py\" in add_filter\n  1129.                 connector)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/sql/where.py\" in add\n  67.             value = obj.prepare(lookup_type, value)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/sql/where.py\" in prepare\n  316.             return self.field.get_prep_lookup(lookup_type, value)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/fields/__init__.py\" in get_prep_lookup\n  292.             return self.get_prep_value(value)\nFile \"/Users/berryp/projects/openhatch/vendor/packages/Django/django/db/models/fields/__init__.py\" in get_prep_value\n  479.         return int(value)\n\nException Type: ValueError at /customs/edit/trac/ds/url/\nException Value: invalid literal for int() with base 10: ''\n   \n", "author": "berryp"}, {"message": "This should return a 404 when when no url id is specified.\n   \n", "author": "berryp"}]}