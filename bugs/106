{"status": "resolved", "priority": "bug", "title": "Fixes for \"fail\" and \"error\" test results in search/tests.py", "milestone": "", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "", "waitingon": "", "keywords": [], "id": "106", "files": [{"url": "http://openhatch.org/bugs/file41/search_tests_fail_and_error_fixes.patch", "author": "pythonian4000"}], "history": [{"message": "Hey! This is great... \n\nI've pushed these. A few remarks.\n\n1. For dealing with dictionaries that don't have a particular key you want, I\nprefer this idiom:\n    things = {}\n    if things.get('key_that_might_not_be_in_there', None) == 'awesome':\n       do_something_awesome()\n\nas opposed to handling KeyError. So I added a commit on top of your patches that\nconvert it to using .get().\n\n2. The way we do bug search, it relies on MySQL's regular expression syntax. So\nrunning them with SQLite makes them not function properly.\n\nThat's all for this bug! Marking as resolved.\n   \n", "author": "paulproteus"}, {"message": "A patch fixing some of the problems the test was showing. Of the eight problems\noriginally showing, six are fixed. Of the remaining two failures, one is just a\nmatterof deciding what you want the output of a function to be, but I don't know\nwhat is up with the other.\n\nInterestingly, if the tests are run as run as \"bin/sqlite_mysite test search\"\ninstead of \"bin/mysite test search\", the tests are quicker but there are many\nmore errors and fails...\n   \n", "author": "pythonian4000"}]}