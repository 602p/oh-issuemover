{"status": "resolved", "priority": "bug", "title": "Store data on whether a user has completed a mission part at least once", "milestone": "0.11.04", "superceder": "", "nosylist": ["filipovskii_off, paulproteus, pythonian4000"], "assigned": "filipovskii_off", "waitingon": "", "keywords": ["bitesize"], "id": "271", "files": [{"url": "http://openhatch.org/bugs/file249/0001-Solves-Issue-271.patch", "author": "filipovskii_off"}, {"url": "http://openhatch.org/bugs/file250/0001-Solves-Issue-271.patch", "author": "filipovskii_off"}, {"url": "http://openhatch.org/bugs/file246/0001-Solves-Issue-271.tar", "author": "filipovskii_off"}], "history": [{"message": "This applied fine for me and all tests in missions passed, so deployed! Great\nwork! =D\n   \n", "author": "pythonian4000"}, {"message": "there are confusing test names, I've forgotten to change them after changing column \nname, here is the latest version\n   \n", "author": "filipovskii_off"}, {"message": "all done\n   \n", "author": "filipovskii_off"}, {"message": "&lt;pythonian4000&gt; So the existence of the StepCompletion object is proof of it\nhaving been completed at least once.\n&lt;filipovskii_off&gt; yep\n&lt;pythonian4000&gt; And the value of reseted defines whether it is complete in the\ncurrent iteration.\n&lt;filipovskii_off&gt; exactly\n&lt;pythonian4000&gt; filipovskii_off, that is awesome!\n&lt;filipovskii_off&gt; you're kidding? ))\n\nAnd for the record, my suggestions:\n\n1. Expand the tuple returned by get_or_create instead of treating it like a list:\ns, _ = StepCompletion.objects.get_or_create(...\ns.reseted = False\ns.save()\netc.\n\n2. Add a method mission_completed_at_least_once() to actually use this\nfunctionality.\n\n3. Change the name of the \"reseted\" field to make it clearer what it actually\nmeans, e.g. to is_currently_completed (which would then invert all your boolean\nvalues) and add a comment above it in the model to also explain things.\n\n4. Add a South migration to actually modify the database to have the new model\nfield. This one is odd, as the tests still pass without it using\n\"./bin/sqlite_mysite\". Maybe the flat-file database doesn't need South\nmigrations? Or it doesn't care? Either way, a migration is needed for the patch\nto be deployable. See <a href=\"https://openhatch.org/wiki/Making_schema_changes\">https://openhatch.org/wiki/Making_schema_changes</a>\n\nAlso, at some point you need to email the mailing list permitting us to share\nyour work, as per\n<a href=\"https://openhatch.org/wiki/How_we_handle_patches#Permit_us_to_share_your_work:\">https://openhatch.org/wiki/How_we_handle_patches#Permit_us_to_share_your_work:</a>\n\nLastly, it is great to have a new contributor! Thanks for the great patch!\n   \n", "author": "pythonian4000"}, {"message": "I'll try to handle this\n   \n", "author": "filipovskii_off"}, {"message": "Moving off to a different, future milestone for now.\n\nIf you are a new prospective OpenHatch contributor, and you're willing to dive\nin to a Django codebase (perhaps because you have Django experience), this is a\ngood one to take.\n\nIt would require:\n\n* Modifying the way we store data so that we store a new column or row that is\nsaved, even if you clear a mission to \"not yet done\" status\n* Writing a test that shows that finishing a missions test showing that we mark\nthe mission as having been completed in your new, permanent column/row\n* Writing a test that shows that even if you clear a mission to \"not yet done\"\nstatus, the datum remains present\n\nWe are standing by on IRC and the [Devel] list, ready to help you with this.\n   \n", "author": "paulproteus"}, {"message": "I do not have enough time to close this issue in a reasonable time. De-assigned.\n   \n", "author": "ktarnowski"}, {"message": "Hey, do you still want this assigned to you?\n\nJust checking. If not, feel free to de-assign it, and we can make it something\nto feed new contributors to get them figuring out Django models and the like.\n   \n", "author": "paulproteus"}, {"message": "Bumping forward since we're toward the end of Feb and it's not ready yet, and\nit's not urgent for a release targeted at project maintainers.\n   \n", "author": "paulproteus"}, {"message": "If we ever want to add features dependent on a user havinc completed a mission,\nalongside the current ability to reset a mission's state, then we need this.\n   \n", "author": "pythonian4000"}]}