{"status": "resolved", "priority": "urgent", "title": "Launchpad bug importer fails on 4-byte utf8 characters", "milestone": "0.11.01", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "225", "files": [], "history": [{"message": "As an update to the story:\n\nI failed to notice that this ticket *does* contain a patch that writes a test.\nThank goodness.\n\nThat's pushed to origin/master. Pardon my sloppiness in failing to notice that\nearlier!\n   \n", "author": "paulproteus"}, {"message": "Okay, I'm shipping this. But if this causes an exception, then you're going to\nhave to write a test for it.\n   \n", "author": "paulproteus"}, {"message": "Eh, couldn't be bothered waiting and temporarily commented out the Launchpad\nfreshness check =P Patch functions perfectly, so here it is:\n\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=c69d5a9bad4a4efce16e4a136779a06554872535\">http://git.jackgrigg.com/openhatch/patch/?id=c69d5a9bad4a4efce16e4a136779a06554872535</a>\n   \n", "author": "pythonian4000"}, {"message": "I have a patch ready that makes the test pass, but I will wait until I have\nchecked the importer tomorrow before posting it.\n   \n", "author": "pythonian4000"}, {"message": "Hmm, that is strange... I haven't even started fixing this yet and the Launchpad\nimporter runs fine. I will have to check the code, but maybe the Bug's\n\"last_polled\" field is being correctly updated while the description failed, and\nso even though it failed the later runs think it is fresh. I will implement a\nfix anyway but will try the Launchpad importer again tomorrow before\nimplementing it to see what's up...\n   \n", "author": "pythonian4000"}, {"message": "Here is a patch for a test that checks the Launchpad data dict method removes\nany 4-byte UTF8 (it currently fails):\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=ae2eff1aa9d53d4dd0679966f7f0275b91361e3c\">http://git.jackgrigg.com/openhatch/patch/?id=ae2eff1aa9d53d4dd0679966f7f0275b91361e3c</a>\n\nSee here for discussion on the bug:\n<a href=\"http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-27#i_2521699A\">http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-27#i_2521699A</a>\n\nAs per the end of the discussion, I will write a base helper that takes an\narbitrary dict and sterilizes it of any 4-byte UTF8 it can find, and I'll run it\nover the launchpad data dict.\n   \n", "author": "pythonian4000"}, {"message": "2011-01-24 14:09:59,465 refresh_one_launchpad_bug:197 INFO     Checking on\n<a href=\"https://bugs.launchpad.net/bugs/657268...\">https://bugs.launchpad.net/bugs/657268...</a>\n2011-01-24 14:09:59,467 refresh_one_launchpad_bug:211 INFO     Refreshing\n<a href=\"https://bugs.launchpad.net/bugs/657268.\">https://bugs.launchpad.net/bugs/657268.</a>\nTraceback (most recent call last):\n  File \"./bin/mysite\", line 81, in &lt;module&gt;\n    djangorecipe.manage.main('mysite.settings')\n  File\n\"/home/jack/git/public/openhatch/eggs/djangorecipe-0.20-py2.6.egg/djangorecipe/manage.py\",\nline 16, in main\n    management.execute_manager(mod)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/core/management/__init__.py\",\nline 362, in execute_manager\n    utility.execute()\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/core/management/__init__.py\",\nline 303, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/core/management/base.py\",\nline 195, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/core/management/base.py\",\nline 222, in execute\n    output = self.handle(*args, **options)\n  File\n\"/home/jack/git/public/openhatch/mysite/customs/management/commands/customs_daily_tasks.py\",\nline 194, in handle\n    self.update_launchpad_hosted_projects()\n  File\n\"/home/jack/git/public/openhatch/mysite/customs/management/commands/customs_daily_tasks.py\",\nline 160, in update_launchpad_hosted_projects\n   \nmysite.customs.bugtrackers.launchpad.refresh_bugs_from_all_indexed_launchpad_projects()\n  File\n\"/home/jack/git/public/openhatch/mysite/customs/bugtrackers/launchpad.py\", line\n166, in refresh_bugs_from_all_indexed_launchpad_projects\n    openhatch_project_name)\n  File\n\"/home/jack/git/public/openhatch/eggs/celery-1.0.5-py2.6.egg/celery/task/base.py\",\nline 208, in __call__\n    return self.run(*args, **kwargs)\n  File\n\"/home/jack/git/public/openhatch/eggs/celery-1.0.5-py2.6.egg/celery/decorators.py\",\nline 52, in run\n    return fun(*args, **kwargs)\n  File\n\"/home/jack/git/public/openhatch/mysite/customs/bugtrackers/launchpad.py\", line\n182, in import_bugs_from_one_project\n    openhatch_project_name=openhatch_project_name)\n  File\n\"/home/jack/git/public/openhatch/eggs/celery-1.0.5-py2.6.egg/celery/task/base.py\",\nline 208, in __call__\n    return self.run(*args, **kwargs)\n  File\n\"/home/jack/git/public/openhatch/eggs/celery-1.0.5-py2.6.egg/celery/decorators.py\",\nline 52, in run\n    return fun(*args, **kwargs)\n  File\n\"/home/jack/git/public/openhatch/mysite/customs/bugtrackers/launchpad.py\", line\n236, in refresh_one_launchpad_bug\n    bug.save()\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/models/base.py\",\nline 431, in save\n    self.save_base(force_insert=force_insert, force_update=force_update)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/models/base.py\",\nline 495, in save_base\n    rows = manager.filter(pk=pk_val)._update(values)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/models/query.py\",\nline 448, in _update\n    return query.execute_sql(None)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/models/sql/subqueries.py\",\nline 124, in execute_sql\n    cursor = super(UpdateQuery, self).execute_sql(result_type)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/models/sql/query.py\",\nline 2347, in execute_sql\n    cursor.execute(sql, params)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/backends/util.py\", line\n19, in execute\n    return self.cursor.execute(sql, params)\n  File\n\"/home/jack/git/public/openhatch/parts/sqlite_mysite/django/db/backends/mysql/base.py\",\nline 84, in execute\n    return self.cursor.execute(query, args)\n  File\n\"/home/jack/git/public/openhatch/eggs/MySQL_python-1.2.3-py2.6-linux-x86_64.egg/MySQLdb/cursors.py\",\nline 176, in execute\n    if not self._defer_warnings: self._warning_check()\n  File\n\"/home/jack/git/public/openhatch/eggs/MySQL_python-1.2.3-py2.6-linux-x86_64.egg/MySQLdb/cursors.py\",\nline 92, in _warning_check\n    warn(w[-1], self.Warning, 3)\n_mysql_exceptions.Warning: Incorrect string value: '\\xF0\\x90\\x91\\x91\\xF0\\x90...'\nfor column 'description' at row 1\n\nLooking at the Launchpad page in question, it is a bug about Gnome crashing on\nwide (4-byte) utf8 characters, and it gives three character examples which\ncorrespond to these six hex characters.\n\nThis is annoying.\n\nWe need to add support into... somewhere... for 4-byte utf8 characters, either\nby allowing their storage or culling them from any message they are contained in.\n   \n", "author": "pythonian4000"}]}