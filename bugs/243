{"status": "resolved", "priority": "urgent", "title": "If the bug recommendation list is not fresh, then we should display the user's home page / the bug search page while we calculate the bug recommendation list in a background GET", "milestone": "0.11.02", "superceder": "", "nosylist": ["aldeka, ktarnowski, paulproteus"], "assigned": "ktarnowski", "waitingon": "", "keywords": [], "id": "243", "files": [], "history": [{"message": "This is resolved. See <a href=\"issue310\">issue310</a> for something else. (-:\n   \n", "author": "paulproteus"}, {"message": "Traceback (most recent call last):\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/core/handlers/base.py\",\nline 99, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"&lt;string&gt;\", line 2, in home\n\n  File \"/home/deploy/milestone-a.buildout/mysite/base/decorators.py\", line 67,\nin view\n    request, template, view_data = func(*args, **kw)\n\n  File \"/home/deploy/milestone-a.buildout/mysite/base/views.py\", line 94, in home\n    suggested_searches = request.user.get_profile().get_recommended_search_terms()\n\n  File \"/home/deploy/milestone-a.buildout/mysite/profile/models.py\", line 302,\nin get_recommended_search_terms\n    return Person.only_terms_with_results(terms)\n\n  File \"/home/deploy/milestone-a.buildout/mysite/profile/models.py\", line 277,\nin only_terms_with_results\n    hit_count = query.get_or_create_cached_hit_count()\n\n  File \"/home/deploy/milestone-a.buildout/mysite/search/controllers.py\", line\n366, in get_or_create_cached_hit_count\n    defaults={'hit_count': count})\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/manager.py\", line\n122, in get_or_create\n    return self.get_query_set().get_or_create(**kwargs)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/query.py\",\nline 336, in get_or_create\n    obj.save(force_insert=True)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/base.py\",\nline 431, in save\n    self.save_base(force_insert=force_insert, force_update=force_update)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/base.py\",\nline 516, in save_base\n    result = manager._insert(values, return_id=update_pk)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/manager.py\", line\n176, in _insert\n    return insert_query(self.model, values, **kwargs)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/query.py\",\nline 1109, in insert_query\n    return query.execute_sql(return_id)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/sql/subqueries.py\",\nline 324, in execute_sql\n    cursor = super(InsertQuery, self).execute_sql(None)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/models/sql/query.py\",\nline 2347, in execute_sql\n    cursor.execute(sql, params)\n\n  File\n\"/home/deploy/milestone-a.buildout/parts/production/django/db/backends/mysql/base.py\",\nline 84, in execute\n    return self.cursor.execute(query, args)\n\n  File\n\"/home/deploy/milestone-a.buildout/eggs/MySQL_python-1.2.3c1-py2.6-linux-i686.egg/MySQLdb/cursors.py\",\nline 173, in execute\n    self.errorhandler(self, exc, value)\n\n  File\n\"/home/deploy/milestone-a.buildout/eggs/MySQL_python-1.2.3c1-py2.6-linux-i686.egg/MySQLdb/connections.py\",\nline 36, in defaulterrorhandler\n    raise errorclass, errorvalue\n\nOperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')\n\nI guess the cached hit count should *not* live in the database. I guess it\nshould live in memcached.\n\nI guess that's a separate issue, in theory.\n   \n", "author": "paulproteus"}, {"message": "I deployed it... but <a href=\"https://openhatch.org/\">https://openhatch.org/</a> is still taking the usual \"forever\"\nto load for me. I still suspect it's because of bug recommendations, so I should\nprobably read the new code a little more carefully to see if we're calling the\nmethod somehow.\n\nWe should probably figure out what's going on. Marking as \"chatting\" for now. |:\n   \n", "author": "paulproteus"}, {"message": "These look good to me. I'm going to let Hudson test them, and if Hudson agrees,\nthen I will deploy.\n\nSome small nitpicks:\n\n* There are some unnecessary deltas in here that still get reverted -- namely,\nreferences to the AJAX loader spinner that you added.\n\nI think that's all for now. I'm glad this is (hopefully) landing!\n   \n", "author": "paulproteus"}, {"message": "Included suggested changes and fixes. Rebased and merged to local master without a \nfuss.\n\n<a href=\"http://gitorious.org/~ktarnowski/openhatch/ktarnowskis-oh-mainline/commits/243-bug-\">http://gitorious.org/~ktarnowski/openhatch/ktarnowskis-oh-mainline/commits/243-bug-</a>\nrecommendations-krzysztof\n   \n", "author": "ktarnowski"}, {"message": "Thanks for the comments - it should be fine now, hopefully.\n\nI've totally missed the throbber; I've been looking for other keywords.\n\nRe. language: too fast, too furious ;-)\n   \n", "author": "ktarnowski"}, {"message": "This looks really good overall! Some thoughts:\n\n* It's easier to review if you squash commits+reversions away. For example, you\nadded ajax-loader-medium and then removed it. You can use \"git rebase -i\" to\ncombine those commits, and then it's like the file never existed.\n\n* This comment isn't quite proper English: /* People's list */ -- I think it\nshould be \"People list\", but I'm actually not sure. Probably a more descriptive\ncomment would help.\n\n* It's really really good that you're making lots of separate commits, with e.g.\nmoving inline CSS out of files as one individual commit.\n\n* \"On age cases\" -- I think you mean, \"On edge cases\"?\n\n* If a user is new to the site, and therefore we don't know anything about them,\ndo you show \"We're sorry\"? That's kind of sad, if so!\n\n* In general, these changes are *great*.\n\nI think displaying text would be nice thing to do.\n\nWe do already have two throbbers in the tree: can you use those  instead?\n\nmysite/static/images/throbber-54px.gif\nmysite/static/images/throbber.gif\n\nThat's my feedback.\n\nIt's fine giving me Gitorious branches to review; it's pretty eays to get all\nthe changes. Before I push, I'm going to rebase the changes onto the current\norigin/master, which (having just tried it) is going to very easy. But because\nof that rebase-y workflow, in general if there are individual commits that are\nshippable now, then I would suggest using \"git rebase -i\" to move them to the\nearly part of the patch series, and then just ask me to take the\nnon-controversial changes immediately.\n\nLike template refactorings, for example.\n   \n", "author": "paulproteus"}, {"message": "Please fetch changes from my development branch: \n<a href=\"http://gitorious.org/~ktarnowski/openhatch/ktarnowskis-oh-mainline/commits/243-\">http://gitorious.org/~ktarnowski/openhatch/ktarnowskis-oh-mainline/commits/243-</a>\nbug-recommendations-krzysztof (starting with commit 5c4234e).\n\nInput regarding UI/UX of the new solution is desirable, i.a. is there a need for \ndisplaying text ('Loading your...') along with animated AJAX image?\n\nAJAX loaders can be generated using online tool available at \n<a href=\"http://www.preloaders.net/,\">http://www.preloaders.net/,</a> in case the one used here is deemed unsatisfactory.\n   \n", "author": "ktarnowski"}, {"message": "I agree; having background jobs work reliably is a good thing.\n\nAnd yay!\n   \n", "author": "paulproteus"}, {"message": "Excellent idea. It's less painful for me to implement ;-)\n\nIt would be nice, though, to have good mechanism for executing background tasks. I \nwill create a separate issue for that one.\n   \n", "author": "ktarnowski"}, {"message": "There's an easy way to solve this, actually:\n\nThe slowest part of loading <a href=\"http://openhatch.org/\">http://openhatch.org/</a> (and /search/) can be loading\nthe user's list of recommended bugs. But it's hard to keep that list always\nup-to-date, and when there are new \n\nSo the template should just a little check. Here's pseudocode:\n\n{% if person.bug_recommendation_list_is_available %}\n   {{ person.bug_recommendation_list }}\n{% else %}\n   &lt;span id=\"replace_with_bugs\"&gt;Calculating your recommended bugs. One\nmoment...&lt;/span&gt;\n{% endif %}\n\nAnd then here's some sample pseudocode in JQuery:\n\n$( function() {\n    if ($(\"#replace_with_bugs\").size() &gt; 0) {\n         $.get('/+account/bug_recommendation_list_as_template_fragment',\n              function(data) {\n                     $('#replace_with_bugs').html(data);\n               });})\n\nThis wouldn't even require creating a new scheduled task.\n\nYou could solve this if you have basic \n\nIt would be nice to accompany this with a test, from the Python side, that if\nthe person's list of recommended bugs is somehow not available yet, that\nrendering the home page does not cause it to get rendered. You can do that by\nmocking out mysite.profile.controllers.RecommendBugs.recommend() and making sure\nthe mock method was not called.\n   \n", "author": "paulproteus"}, {"message": "So, uh, right now, when I (Asheesh) log in, it takes 20-30 seconds to render my\nhome page. This is because it spends all that time working on calculating my bug\nrecommendations.\n\nWe should have a mechanism for eagerly filling this cache. See some discussion\non IRC, starting at\n<a href=\"http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-29#i_2523321\">http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-29#i_2523321</a>\n   \n", "author": "paulproteus"}]}