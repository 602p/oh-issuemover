{"status": "unread", "priority": "wish", "title": "OpenHatch migrations should be tested (and fixed) with postgresql", "milestone": "", "superceder": "", "nosylist": ["paulproteus"], "assigned": "", "waitingon": "", "keywords": [], "id": "677", "files": [], "history": [{"message": "There are a few different database errors that one gets when running our\nmigrations on Postgres. \n\nThe following is one of them:\n\n2012-02-13 14:07:03,860 execute:145 DEBUG    south execute \"ALTER TABLE\n\"search_projectinvolvementquestion\" ALTER COLUMN \"is_bug_style\" TYPE boolean,\nALTER COLUMN \"is_bug_style\" SET NOT NULL, ALTER COLUMN \"is_bug_style\" SET\nDEFAULT %s ;\" with params \"[False]\"\nTraceback (most recent call last):\n  File \"mysite/manage.py\", line 25, in &lt;module&gt;\n    execute_manager(mysite.settings)\n  File \"/app/vendor/packages/Django/django/core/management/__init__.py\", line\n438, in execute_manager\n    utility.execute()\n  File \"/app/vendor/packages/Django/django/core/management/__init__.py\", line\n379, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/app/vendor/packages/Django/django/core/management/base.py\", line 191,\nin run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/app/vendor/packages/Django/django/core/management/base.py\", line 220,\nin execute\n    output = self.handle(*args, **options)\n  File \"/app/vendor/packages/Django/django/core/management/base.py\", line 351,\nin handle\n    return self.handle_noargs(**options)\n  File \"/app/vendor/packages/south/south/management/commands/syncdb.py\", line\n99, in handle_noargs\n    management.call_command('migrate', **options)\n  File \"/app/vendor/packages/Django/django/core/management/__init__.py\", line\n166, in call_command\n    return klass.execute(*args, **defaults)\n  File \"/app/vendor/packages/Django/django/core/management/base.py\", line 220,\nin execute\n    output = self.handle(*args, **options)\n  File \"/app/vendor/packages/south/south/management/commands/migrate.py\", line\n105, in handle\n    ignore_ghosts = ignore_ghosts,\n  File \"/app/vendor/packages/south/south/migration/__init__.py\", line 191, in\nmigrate_app\n    success = migrator.migrate_many(target, workplan, database)\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 221, in\nmigrate_many\n    result = migrator.__class__.migrate_many(migrator, target, migrations, database)\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 292, in\nmigrate_many\n    result = self.migrate(migration, database)\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 125, in\nmigrate\n    result = self.run(migration)\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 99, in run\n    return self.run_migration(migration)\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 81, in\nrun_migration\n    migration_function()\n  File \"/app/vendor/packages/south/south/migration/migrators.py\", line 57, in\n&lt;lambda&gt;\n    return (lambda: direction(orm))\n  File\n\"/app/mysite/../mysite/search/migrations/0036_questions_with_bugs_as_answers.py\", line\n40, in forwards\n    db.alter_column('search_projectinvolvementquestion', 'is_bug_style',\norm['search.projectinvolvementquestion:is_bug_style'])\n  File \"/app/vendor/packages/south/south/db/generic.py\", line 382, in alter_column\n    flatten(values),\n  File \"/app/vendor/packages/south/south/db/generic.py\", line 150, in execute\n    cursor.execute(sql, params)\n  File \"/app/vendor/packages/Django/django/db/backends/util.py\", line 34, in execute\n    return self.cursor.execute(sql, params)\n  File\n\"/app/vendor/packages/Django/django/db/backends/postgresql_psycopg2/base.py\",\nline 44, in execute\n    return self.cursor.execute(query, args)\ndjango.db.utils.DatabaseError: column \"is_bug_style\" cannot be cast to type\n\"pg_catalog.bool\"\n\nI discovered this while attempting to start an instance of the OpenHatch code on\nHeroku's \"cedar\" stack.\n\nIt would be good to add Postgres as a supported database so that people can run\nOpenHatch on Heroku if they want, or just if they want to use Postgres on their\nown machines.\n   \n", "author": "paulproteus"}]}