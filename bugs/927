{"status": "chatting", "priority": "bug", "title": "Adjust /search/ to do faceted browsing client-side", "milestone": "", "superceder": "", "nosylist": ["paulproteus"], "assigned": "", "waitingon": "", "keywords": [], "id": "927", "files": [], "history": [{"message": "More from my friend:\n\nPostgreSQL GIN indexes are designed for this use case, and in the geographic information systems \ncircles they use it like this all the time. But I did a Google search for \"postgres gin index faceted \nsearch\", and the results sucked, and the top ones were actually wrong (like, used the ibdex just for \nfull-text and then implemented the facets using joins). But even just as \"improved full text search \nthat could solve the C++ problem without moving to facets\", it should be much better than MySQL. (And it doesnt involve shoving the filtering to the client, which only scales better if your architecture \nis already fundamentally flawed as the client has to then be sent unfiltered data, which for niche \nqueries means an insanely low hit ratio for a problem that should be I/O bound.)\n   \n", "author": "brittag"}, {"message": "Suggestions from a friend:\n\n* The \"no one's ever fired for going with...\" way is Apache Solr.\n* The \"fully Web 2.0 Ruby-approved\" solution is Elasticsearch.\n* The \"grumpy programmer\" implementation is PostgreSQL GIN indexes.\n\nWith a link to <a href=\"http://blog.wikimedia.org/2014/01/06/wikimedia-moving-to-elasticsearch/\">http://blog.wikimedia.org/2014/01/06/wikimedia-moving-to-elasticsearch/</a> for \nfurther reading about the tradeoffs of Solr vs. Elasticsearch.\n\nComments from paulproteus:\n\n* SOLR means that new contributors have to run some insane large java blob to get /search/ \nworking, which is just sad.\n* Elasticsearch is a fine solr-esque strategy.\n* Postgresql gin indexes sound awesome. We happen not to use postgres in production, but we \nprobably should anyway. Then it can be the same SQL query for people in dev, on sqlite, but fast in \nproduction.\n   \n", "author": "brittag"}, {"message": "A goal of the current implementation is that if you search for \"C\" you won't \nfind \"C++\". We implement this by a crazy hack of  MySQL REGEX queries. We should \nprobably switch this to client-side faceted search, as here in 2014, it's safe \nto assume people have Javascript.\n\nThat would also let us remove some of the MySQL-specific query syntax to make \nfaceted search at openhatch.org/search/ work nicely.\n\n<a href=\"http://www.simile-widgets.org/exhibit3/examples/cereals/cereal-characters.html\">http://www.simile-widgets.org/exhibit3/examples/cereals/cereal-characters.html</a> \nis a sample of a nice-seeming faceted browsing library in Javascript.\n\nThis would also address a long-standing performance problem that the site has.\n   \n", "author": "paulproteus"}]}