{"status": "resolved", "priority": "feature", "title": "Add a progress bar somewhere tracking the current milestone's progress", "milestone": "0.10.11", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "178", "files": [], "history": [{"message": "[18:39:10] &lt;pythonian4000&gt; paulproteus, ping re: progress bar - I have updated\nit to use CSS and a definition list instead of a table - better?\n[18:40:33] &lt;paulproteus&gt; pythonian4000: I think the olive color is kind of ugly,\nthough... I do like the CSSification!\n[18:40:50] &lt;paulproteus&gt; I wonder about using either the blue or green from the\nOpenHatch logo.\n[18:58:26] --&gt; ian_brasil_ (~<a href=\"mailto:ian_brasi@187.90.152.142\">ian_brasi@187.90.152.142</a>) has joined #openhatch\n[19:47:57] &lt;pythonian4000&gt; paulproteus, do you know what the color codes for the\nOH logo are?\n[20:03:51] &lt;variable&gt; pythonian4000, there is a HTML5 progress element\n[20:04:16] &lt;variable&gt; why do you need a DL ?\n[20:05:07] &lt;pythonian4000&gt; DL?\n[20:05:36] &lt;pythonian4000&gt; Oh, to create the layout. Also means that if CSS is\ndisabled then no information is lost.\n[20:17:37] &lt;variable&gt; pythonian4000, even with a progress element?\n[20:17:54] &lt;pythonian4000&gt; I didn't know about the progress element.\n[20:17:58] -*- pythonian4000 Googles...\n[20:42:31] &lt;paulproteus&gt; pythonian4000: yo\n[20:42:41] &lt;paulproteus&gt; re: color: I would just open up the GIMP and extract\n'em from the image.\n[20:47:22] &lt;pythonian4000&gt; paulproteus, I used colorzilla instead =) Could you\nhave a LOOK NOW?\n[20:47:32] &lt;pythonian4000&gt; Argh, caps lock...\n[20:47:41] &lt;paulproteus&gt; OKAY I CAN ONE SEC\n[20:47:50] &lt;paulproteus&gt; (-:\n[20:48:04] &lt;paulproteus&gt; That is aweeeeeeeeeeeeesome!\n[20:48:20] &lt;paulproteus&gt; My only complaint is that it's not clear the blue is\nwork we have to do.\n[20:48:46] &lt;paulproteus&gt; The green looks AWESOME.\n[20:49:10] &lt;paulproteus&gt; I would say that either the blue could become totally\nwhite; or the blue could become paler; or there could be a text-align: center;\nsection in the middle that says, \"45% done\" or something\n[20:49:26] &lt;paulproteus&gt; What do you think?\n[20:50:03] &lt;paulproteus&gt; back in a bit; gotta do some dishes.\n[21:14:06] &lt;pythonian4000&gt; paulproteus, I have removed the blue for now, is that\nbetter? I will try work out a colour code for a lighter version of the blue as\nwell...\n[21:30:14] &lt;paulproteus&gt; pythonian4000: I think that without the blue, it's\nquite clear what's going on!\n[21:30:27] -*- paulproteus smiles warmly at the re-use of logo colors.\n[21:31:11] &lt;pythonian4000&gt; I can put text in them if you want.\n[21:31:21] &lt;pythonian4000&gt; (Just by un-hiding the text in CSS)\n[21:31:56] &lt;pythonian4000&gt; The idea is that if you turn off CSS you still get\nthe same information. (e.g. in Firefox View -&gt; Page Style -&gt; No Style)\n[21:41:19] &lt;paulproteus&gt; Yeah! I really like the DL strategy.\n[21:43:21] &lt;paulproteus&gt; I want to try disabling the display: none;, but I'm\ntrying to figure out how to do that.\n[21:43:27] &lt;paulproteus&gt; (To see if that makes it easier to understand.)\n[21:44:12] &lt;paulproteus&gt; Hah, it's text-indent, not a display: attribute.\n[21:44:59] &lt;paulproteus&gt; I think if it said \"40% done\" \"60% to go\" and you could\nsee the text, that would be best.\n[21:45:06] &lt;paulproteus&gt; Then we could even put the blue back.\n[21:45:50] &lt;paulproteus&gt; I \"have to\" go out to Grendel's to meet some friends\nnow. |:\n[21:48:58] &lt;paulproteus&gt; Locally I added text-align: center;\n[21:49:25] &lt;paulproteus&gt; to the \"40%\" and \"60%\" values' CSS properties.\n[21:49:40] &lt;paulproteus&gt; Presumably if the percentage is low, that'll look\nweird, though.\n[23:53:12] &lt;pythonian4000&gt; paulproteus, made some changes - now there is text in\neach side of the progress bar if the side is at 10% or greater.\n[23:53:49] &lt;paulproteus&gt; That looks gorgeous.\n[23:54:16] &lt;paulproteus&gt; It makes me want to mark your ticket as closed just to\nbump up the percentage done!\n[00:07:17] &lt;pythonian4000&gt; paulproteus, well if you think it's good then close it!\n[00:07:17] &lt;paulproteus&gt; pythonian4000: I'm happy if you're happy. You say the\nword, and I'll mark it as resolved.\n[00:09:28] &lt;paulproteus&gt; D\n[00:09:28] &lt;paulproteus&gt; D'oh\n[00:09:38] &lt;paulproteus&gt; Yargh.\n[00:10:39] &lt;paulproteus&gt; Load storms.\n[00:13:00] &lt;pythonian4000&gt; paulproteus, I did notice an odd bug - all the\nquery-related links in the sidebar (\"Show All\" etc.) have \"&amp;milestone=2\" added\nto the end of the URL, and since my code looks for the \"milestone\" URL parameter\nyou end up with an unneeded progress bar.\n[00:13:23] &lt;paulproteus&gt; Because milestone=2 ?\n[00:13:33] &lt;paulproteus&gt; Which milestone is 2, anyway?\n[00:13:35] &lt;paulproteus&gt; Is that the null value?\n[00:13:49] &lt;pythonian4000&gt; (Must be something to do with how the links are\ngenerated, as from any other page those links don't have \"&amp;milestone=2\" on them.\n[00:13:49] &lt;pythonian4000&gt; )\n[00:13:53] &lt;paulproteus&gt; (If so, hard-code the Python to ignore that value as\nmeaning that the milestone is set?)\n[00:14:02] &lt;pythonian4000&gt; (That means that clicking the link again gets rid of\nthe bar.)\n[00:14:47] &lt;pythonian4000&gt; 0.10.11\n[00:14:54] &lt;pythonian4000&gt; has id=2\n[00:15:06] &lt;pythonian4000&gt; later has id=1, 0.10.12 has id=3\n[00:15:09] &lt;paulproteus&gt; So I guess instead you should check that\nfilter=milestone is set\n[00:15:18] &lt;paulproteus&gt; Even if filter=status,milestone\n[00:15:21] &lt;paulproteus&gt; That's okay, too.\n[00:16:12] &lt;pythonian4000&gt; What I did is surround all my new code with\n&lt;tal:block tal:condition=\"request/form/milestone | nothing\"&gt;\n[00:17:01] &lt;pythonian4000&gt; \"request/form/milestone\" is the \"milestone\" URL\nparameter and throws an error if it isn't there, which then picks the \"| nothing\"\n[00:19:38] &lt;paulproteus&gt;\n<a href=\"http://www.zugod.org/archives/one-approach-to-managing-users-in-plone/person_folder_listing\">http://www.zugod.org/archives/one-approach-to-managing-users-in-plone/person_folder_listing</a>\nsuggests you can jam arbitrary Python code in there, maybe.\n[00:19:53] &lt;paulproteus&gt;                     &lt;span tal:condition=\"python:\nmemberinfo['hometitle'] is not '' and memberinfo['homedepartment'] is not ''\"&gt;\n[00:19:54] &lt;pythonian4000&gt; You can.\n[00:20:03] &lt;pythonian4000&gt; python\n[00:20:05] &lt;pythonian4000&gt; :\n[00:20:16] &lt;pythonian4000&gt; &lt;anything you want ^_^&gt;\n[00:20:32] &lt;paulproteus&gt; Can you check the value of ('milestone' in 'filter') ?\n[00:20:41] &lt;paulproteus&gt; I have a hope that that would be adequate and precise.\n[00:23:27] &lt;paulproteus&gt; What do you think?\n[00:26:20] &lt;pythonian4000&gt; paulproteus, combed through the Roundup docs again\nand discovered that the filters are available through request.filter.\n[00:26:50] &lt;pythonian4000&gt; Previously I was looking in request.form, which was a\nFieldStorage containing a list of MiniFieldStorages - not nice for parsing ~_~\n[00:26:56] &lt;paulproteus&gt; eep!\n[00:27:19] &lt;pythonian4000&gt; So tal:condition=\"python:'milestone' in\nrequest.filter\" works!\n[00:27:22] &lt;pythonian4000&gt; Yay!\n[00:27:29] &lt;paulproteus&gt; Seems fixed!\n[00:27:32] &lt;paulproteus&gt; Dude, nice.\n[00:27:34] -*- paulproteus gives pythonian4000 a high five\n[00:27:55] &lt;pythonian4000&gt; With this knowledge, I may be able to simplify\nanother line...\n[00:28:08] &lt;pythonian4000&gt; (Trying to get the value of the milestone filter\nparameter)\n[00:28:37] &lt;pythonian4000&gt; (Though I was able to get it quite nicely using list\ncomprehension from the request.form mentioned above...)\n[00:30:10] &lt;pythonian4000&gt; Hmm, actually I will stick with what I have -\nrequest.filterspecs has the milestone id not the milestone name.\n[00:31:15] &lt;pythonian4000&gt; paulproteus, I'm happy so if you are then close the bug!\n[00:33:16] &lt;paulproteus&gt; pythonian4000: Looks good to me. You commit it on\nroundup, and I'll close the bug!\n   \n", "author": "paulproteus"}, {"message": "I found this progress bar implemented entirely in CSS (i.e. no JavaScript):\n\n<a href=\"http://www.fiveminuteargument.com/progress-bar\">http://www.fiveminuteargument.com/progress-bar</a>\n\nI have implemented it on the tracker. Is this better? Any suggestions?\n   \n", "author": "pythonian4000"}, {"message": "So first of all:\n\nwowwweeeeeeeeee this is totally awesome!!!!!!!!!!\n\nI discovered it by accident when looking at the milestone list.\n\nThe table-based one is good. If you want to step up your game, you could do it\nwith CSS, where the \"width\" represents the percent completion. Some relevant\nresources:\n\n<a href=\"http://skunkworks.ivanvanderbyl.com/\">http://skunkworks.ivanvanderbyl.com/</a>\n\n<a href=\"http://jqueryui.com/demos/progressbar/\">http://jqueryui.com/demos/progressbar/</a>\n\n<a href=\"https://github.com/ivanvanderbyl/ui-progress-bar\">https://github.com/ivanvanderbyl/ui-progress-bar</a>\n\n<a href=\"http://ashung.deviantart.com/art/CSS-Progress-Bar-122803902\">http://ashung.deviantart.com/art/CSS-Progress-Bar-122803902</a>\n\nIf you feel like creating an image like the one on\n<a href=\"http://pupungbp.erastica.com/css/creating-progress-bar-with-css/\">http://pupungbp.erastica.com/css/creating-progress-bar-with-css/</a> , it appears to\nbe a simple use of the gradient tool in e.g. GIMP.\n\nSo, here are my thoughts:\n\n* I'm quite happy with this as it is! If you are, too, just say so and mark it\nresolved.\n\n* If you want, you can decide that you want to re-do it in CSS. If so, you can\neither create a background image, or not. If so, reply saying your new plan.\n\n(-: !\n   \n", "author": "paulproteus"}, {"message": "Well, it seems that this isn't outside Roundup's capabilities after all! I have\ncreated an auto-generated progress bar out of a table - feedback?\n   \n", "author": "pythonian4000"}, {"message": "From IRC:\n\n&lt;paulproteus&gt; It would be nice to have a progress bar, too, but maybe that's\nmore than Roundup can do easily?\n&lt;pythonian4000&gt; A progress bar is outside Roundup's capabilities as far as I know.\n&lt;pythonian4000&gt; It wouldn't be too hard though to take searches of all bugs for\na milestone and all resolved bugs for a milestone and use the CSVs to generate\nour own bar somewhere...\n&lt;paulproteus&gt; I agree!\n\nSo this would just be something somewhere that is just a ratio bar of number of\nresolved bugs to total number of bugs for a particular milestone. Maybe there is\nsome way of triggering it to be regenerated each time a bug related to the\nmilestone is changed using Roundup detectors, which would enable the bar to be\nalways up-to-date. Otherwise a timed rebuild could be done using CSV exports of\nthe bugs.\n   \n", "author": "pythonian4000"}]}