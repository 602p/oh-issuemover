{"status": "resolved", "priority": "bug", "title": "Project should have a ForeignKey that points at the TrackerModel its bugs are imported from", "milestone": "0.11.04", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "161", "files": [], "history": [{"message": "The Bug now has these GenericForeignKeys, and there is where it makes the most \nsense. Marking as 'resolved'.\n   \n", "author": "paulproteus"}, {"message": "As I discovered while implementing the asynchronous Bug importer, this would\nneed to be implemented using a GenericForeignKey from the Content Types\nframework. Basically, the three lines for the tracker_type, tracker_id and\ntracker lines could be directly copied from Bug to Project.\n   \n", "author": "pythonian4000"}, {"message": "Part of the original issue here stems from a terminology issue that is being\nfixed in <a href=\"issue371\">issue371</a>. However, as per the discussion below, it would certainly be\nuseful to have a link between a tracker that we import from, and the projects\nthat it tracks bugs for.\n\nIRC discussion:\n21:51 paulproteus      jmaister: re: <a href=\"http://cl.ly/2s25290F452N0i0N223s\">http://cl.ly/2s25290F452N0i0N223s</a> -- I\nwould also love a link you can go to that just lists the bug trackers (if any)\nfor your project\n21:51 paulproteus      Then the sidebar at <a href=\"http://openhatch.org/+project/Amarok\">http://openhatch.org/+project/Amarok</a>\n(for example) would link there\n21:51 paulproteus      It could even say, \"No bug trackers listed for this\nproject. Do you want to add one?\"\n21:52 jmaister         That makes perfect sense\n21:52 pythonian4000    paulproteus, that would probably directly tying a project\nto the tracker(s) that supply bugs for it.\n21:53 pythonian4000    s/probably/require\n21:53 paulproteus      Well, the tracker should have (IMHO) a ForeignKey to a\nproject, yeah.\n21:53 jmaister         isn't that a good thing?\n21:53 pythonian4000    paulproteus, I would say the other way around.\n21:53 paulproteus      That's good enough for the simple case, and we can worry\nabout the non-simple case later.\n21:53 paulproteus      pythonian4000: Right, of course -- the other way\n21:54 pythonian4000    It is much more likely that a tracker supply multiple\nprojects than a project have multiple trackers.\n21:54 jmaister         It could even be a limitation, not being able to add\ntrackers for nonexisting projects\n21:54 pythonian4000    jmaister, when we add trackers at present for\nnon-existing projects, it auto-creates them.\n21:54 jmaister         right\n21:55 pythonian4000    E.g. if a tracker ties bugs to project names based on the\n\"component\" field, and a bug appears under a new component, a new project is\ncreated.\n21:55 pythonian4000    (This is governed by the bug_project_name_format field.)\n21:55 jmaister         Auto complete for project name would be cool though.\nMakes people sure they spell the project right\n21:56 pythonian4000    jmaister, see <a href=\"issue161\">issue 161</a> as well.\n21:56 sufjan           04Bug <a href=\"https://openhatch.org/bugs/issue161\">https://openhatch.org/bugs/issue161</a> - title: In\nmysite/customs/models.py we use \"project_name\" when instead we should ForeignKey\nto a Project, creator: paulproteus, assignedto: pythonian4000, milestone:\n0.11.03, status: chatting\n21:56 paulproteus      jmaister: I think the common user experience should be\nthat they come from the project page, fwiw, at which point it's already filled in\n21:56 jmaister         paulproteus: You rock at making sense today!\n21:56 pythonian4000    +1 jmaister\n21:56 jmaister         (for all I know you probably always do)\n21:56 paulproteus      Yay a good day.\n21:58 jmaister         Ok, so the /customs/ is for specially interested people.\nIt's the edit/add page and implementation with project page that should have\nfocus. Right?\n21:58 pythonian4000    I agree. The whole reason I started this implementation\nwas to make it easier for people to add new trackers and edit existing ones.\n21:59 jmaister         So do we need /customs/ at all? Can't we just directly\nimplement this with the project?\n21:59 paulproteus      foxfirefey: <a href=\"http://foxfirefey.dreamwidth.org/272059.html\">http://foxfirefey.dreamwidth.org/272059.html</a>\nis totally good.\n21:59 foxfirefey       Aw, kitten.\n22:00 foxfirefey       He is a good kitten.\n22:02 pythonian4000    jmaister, I put it in /customs/ originally because of the\nway the codebase was layed out.\n22:03 pythonian4000    I.e. /search/ is implemented in mysite.search, /people/\nis implemented in mysite.profile, /+projects/ is implemented in mysite.project etc.\n22:03 paulproteus      I would suggest /+bugtrackers/ for a URL prefix\n22:04 pythonian4000    s/bugtrackers/bugimporters/I'm correcting terminology\nduring asyncification\n22:05 paulproteus      pythonian4000: For the user, though, seems like they're\nadding a bug tracker, no?\n22:06 pythonian4000    True...\n22:06 pythonian4000    Yes, that is true.\n22:06 * pythonian4000  is happy with that.\n22:08 jmaister         Sorry for being ambigous (?) but what I meant was: Can\nthe bugtrackers be a subimplementation of a project, or is it so that a tracker\ncan belong to several projects?\n22:09 jmaister         *ambiguous\n22:09 pythonian4000    jmaister, a tracker can belong to several projects.\n22:09 jmaister         Engrish is hard\n22:09 jmaister         well, that settles it\n22:09 paulproteus      &lt;jmaister&gt; i quit\n22:09 pythonian4000    E.g. KDE or Gnome bug trackers, which services many\nProducts or Components.\n22:10 jmaister         paulproteus: :P\n22:11 pythonian4000    Or OLPC and Sugar trackers, which are OSs and so their\nvarious components are separated out into separate projects.\n22:11 pythonian4000    ^ On ones like those, <a href=\"issue328\">issue 328</a> will be useful.\n22:11 sufjan           04Bug <a href=\"https://openhatch.org/bugs/issue328\">https://openhatch.org/bugs/issue328</a> - title:\nProjects should have separate URL/identifying and display names, creator:\npythonian4000, assignedto: pythonian4000, milestone: 0.11.03, status: chatting\n22:12 paulproteus      Since we're talking about me whipping up the backend in a\nday, I would be okay with \"for now\" only handling single-bug-tracker projects.\n22:12 pythonian4000    So that the horribly non-descript in-tracker names can be\nkept for the URLs and something else can be displayed.\n22:12 paulproteus      (FWIW)\n22:12 paulproteus      It's important to design the beautiful dream, too, so by\nall means I think this conversation is good.\n22:14 pythonian4000    FWIW the only one that properly works is Google, which is\nby definition one-tracker-per-project.\n22:14 paulproteus      But for now, I think that we can just add a note in the\nUI saying \"If this is for &gt;1 project, then, uh, add a note on this wiki page\"\n22:14 pythonian4000    Trac is unimplemented (but as it is the first importer I\nam asyncing that will change very soon) and Bugzilla is... well, Bugzilla =D\n22:15 pythonian4000    paulproteus, eventually I would hope that the following\nwould happen:\n22:16 pythonian4000    * several projects exist that happen to have the same\ntracker (and by chance have the exact same name as in the tracker ^_^)\n22:16 pythonian4000    * one project uses this new link to add the tracker,\nadding queries that cover the other projects as well.\n22:17 pythonian4000    * The importer ties new Bugs for the other projects to\nthose projects correctly (as is the case currently as long as naming is correct)\n22:17 pythonian4000    * Something ties the tracker to the other existing\nprojects, so their \"Add your bug tracker\" links now change to point at the same\nbug tracker that the first project added.\n   \n", "author": "pythonian4000"}, {"message": "&lt;pythonian4000&gt; paulproteus, I disagree. What about e.g. Sugar where the project\nname is not what is used for the bug (bug_project_name_format defines what\nProject will be used)\n&lt;paulproteus&gt; doing that column lengthening now\n&lt;paulproteus&gt; pythonian4000: oh...\n&lt;paulproteus&gt; Then it's a \"Bug tracker name\".\n&lt;paulproteus&gt; Except when it's not, yargle.\n&lt;paulproteus&gt; I think we should \"for now\" only support bug trackers that *do*\nforeignkey to a project, in the web interface.\n&lt;paulproteus&gt; I know that means we don't get to move GNOME Love in, for example,\nbut really one-project-per-bug-tracker is the common case.\n&lt;pythonian4000&gt; So that's only ones that have {project} under\nbug_project_name_format\n&lt;paulproteus&gt; Once we focus that way, we can also simplify the form, and then we\ncan have a different, more complex form for the multiproject case.\n-*- paulproteus nods\n&lt;paulproteus&gt; One easy way to do that is to actually have both be stored in the\nsame table.\n&lt;paulproteus&gt; Since the object supports both.\n&lt;paulproteus&gt; Oh, in which case you need project_name... well make it\nbug_tracker_name, then, and create a ForeignKey(Project) that can be null...\n&lt;paulproteus&gt; And for single-project bug trackers, we auto-generate the\nbug_tracker_name\n&lt;paulproteus&gt; (see *this* is code review -- should have given it to you earlier :P)\n&lt;paulproteus&gt; But it only makes sense as I imagine actually using it, like you\nare now\n&lt;pythonian4000&gt; Well I\n&lt;pythonian4000&gt; 've looked through bugtrackers/bugzilla.py and there is actually\nonly a few trackers that use the project name as the bug_project_name\n&lt;paulproteus&gt; Hmm. I guess that's because most Bugzilla projects are complex.\n&lt;paulproteus&gt; Like, \"you wouldn't set up Bugzilla if you had only one project\nbecause Bugzilla is such a bear\"\n&lt;pythonian4000&gt; quite a few use {component} or {product}, and there are also\nones that have their own special methods for determinig what the name is (which\nI was originally going to leave as special cases)\n&lt;paulproteus&gt; Hmm... I see what you mean.\n   \n", "author": "paulproteus"}, {"message": "In e.g. class BugzillaTracker, we have an attribute called \"project_name\".\n\nIt'd be nicer if we could make these ForeignKey to a Project object.\n   \n", "author": "paulproteus"}]}