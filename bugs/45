{"status": "resolved", "priority": "feature", "title": "Suggested bug list Atom feed", "milestone": "0.11.01", "superceder": "", "nosylist": ["TimPost, paulproteus, pythonian4000, rafpaf"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "45", "files": [], "history": [{"message": "Yup, I pushed these and forgot to say so!\n   \n", "author": "paulproteus"}, {"message": "Just quickly correcting the title finally ^_^\n   \n", "author": "pythonian4000"}, {"message": "Not sure where we are at with this. I squashed everything (along with changes\ndiscussed from\n<a href=\"http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-31#i_2525120\">http://irclogs.jackgrigg.com/irc.freenode.net/openhatch/2011-01-31#i_2525120</a> )\ninto two commits. Have these already been pushed? I think they may have been\nfrom my git log. If, paulproteus, you think this is done then feel free to\nresolve it =)\n   \n", "author": "pythonian4000"}, {"message": "This is great that we're finally getting this. Some thoughts:\n\n* You generate an &lt;img src&gt; tag in the landing page for logged in users, but\nthat img tag has no quotes around the URL.\n\n* Copyright-wise, I can't push this in good faith without some idea of where the\nfeed icons came from. Is there a source that we can cite? (Are they under a free\nlicense?)\n\n* I don't like putting code at the 'mysite' level. Can we jam this into an\nexisting \"app\" like the profile app?\n\nThe good:\n\nIt's extremely elegant to use the Django syndication functionality. It is really\n*super* tidy.\n   \n", "author": "paulproteus"}, {"message": "This extra patch puts the title of the Recommended Bugs feed in a class string;\nsince it is fixed, having it enclosed in a method is just extra overhead.\n\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=d678fbc96a571d9222746718b829c0337119f698\">http://git.jackgrigg.com/openhatch/patch/?id=d678fbc96a571d9222746718b829c0337119f698</a>\n   \n", "author": "pythonian4000"}, {"message": "I'm posting this as two separate commits so that the actual feed generator can\nbe pushed even if the link layout patch needs work, so that my soon-to-exist\npatches for <a href=\"https://openhatch.org/bugs/issue244\">https://openhatch.org/bugs/issue244</a> can be applied ^_^\n\nActual feed generation:\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=e50ce63f3cb151e6d9ba11b5433cc2e7144e33c8\">http://git.jackgrigg.com/openhatch/patch/?id=e50ce63f3cb151e6d9ba11b5433cc2e7144e33c8</a>\n\nAdding a link to homepage:\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=d678fbc96a571d9222746718b829c0337119f698\">http://git.jackgrigg.com/openhatch/patch/?id=d678fbc96a571d9222746718b829c0337119f698</a>\n   \n", "author": "pythonian4000"}, {"message": "Here are some groggy morning thoughts;\n\n1. Bug recommendations are actually pretty intensive for the server. We \nshould make sure we do a good job of caching these.\n\n2. In general, this is totally rad. If possible, use /+feeds/ as the URL \nprefix rather than /feeds/ -- we seem to have created a convention \nof doing that sort of prefixing of new system URL prefixes.\n\n3. We should make sure the user interface showcases this RSS feed somehow. \nMaybe just having a big ol' page of \"Goodies\" or \"RSS feeds you might \nlike\" could be enough, or maybe showcasing it right next to the list of \nrecommended bugs. (or both?)\n\n(We can ship this without doing #2 and #3 but those should be on our \nradar.)\n   \n", "author": "paulproteus"}, {"message": "I got bored. Again ^_^\n\nI've implemented this so that it generates feeds from URLs such as\n\n<a href=\"http://openhatch.org/feeds/recbugs/pythonian4000/\">http://openhatch.org/feeds/recbugs/pythonian4000/</a>\n\nI don't actually see a need to obfuscate the username because in all honesty,\nusernames and the real names associated with them are public knowledge on\nOpenHatch, and the only extra information you get from this is what that\nperson's recommended bugs are, which I don't think anyone aside from that person\nwill really care about. I will, however, check all this at the meeting tomorrow\nbefore I post a patch.\n   \n", "author": "pythonian4000"}, {"message": "This sounds awesome. I've done some investigation and Django has a built-in\nsyndication framework:\n\n<a href=\"http://docs.djangoproject.com/en/1.1/ref/contrib/syndication/\">http://docs.djangoproject.com/en/1.1/ref/contrib/syndication/</a>\n\nThe issue will be the fact that a user is usually authenticated to get their\nsuggested bug list. With this alone you cannot authenticate the feed, so you\nwould have to pass at least some form of the username (e.g. a hash of some sort)\nin the url. This isn't so bad, as all that someone malicious could get access to\nis the user's recommended bug list.\n\nThere is a Django snippet that adds basic HTTP authentication (which I put here\nso I remember it),\n\n<a href=\"http://djangosnippets.org/snippets/2291/\">http://djangosnippets.org/snippets/2291/</a>\n\nbut I don't think that is compatible with our OpenID stuff, and many feed\nreaders don't support authentication anyway. So I think our best bet is to have\nfeeds of the form\n\n<a href=\"http://openhatch.org/feeds/recbugs/&lt;something_usernamey\">http://openhatch.org/feeds/recbugs/&lt;something_usernamey</a>&gt;/\n\nNow, I'm going to be really ambitious and flag this for the current 0.11.01\nmilestone, mainly so I remember to discuss it at the meeting tomorrow. But\nactual implementation by 0.11.02 (if not by this milestone) is definitely feasible.\n   \n", "author": "pythonian4000"}, {"message": "This is a cool idea. We'll get on it shortly. No current guess for by when.\n   \n", "author": "paulproteus"}, {"message": "It would be great if the suggested bug list offered a feed (RSS2/ATOM). Bugs \nwould get more attention because people would see them in their readers.\n   \n", "author": "TimPost"}]}