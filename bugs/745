{"status": "resolved", "priority": "bug", "title": "\"diffing entire directories\" dosn't work with ./foo only foo", "milestone": "", "superceder": "", "nosylist": ["DeadDork, daveeloo, jesstess, passstab, paulproteus"], "assigned": "daveeloo", "waitingon": "", "keywords": [], "id": "745", "files": [{"url": "http://openhatch.org/bugs/file522/issue745.diff", "author": "jesstess"}], "history": [{"message": "Hi all,\n\nThe resolution we came to was to add a new error message for this case.\n\nDeadDork + jesstess, thanks for filing it; and huge thanks to daveeloo for \nsubmitting a working test + patch! This is now deployed.\n   \n", "author": "paulproteus"}, {"message": "Comments left on the pull request!\n   \n", "author": "paulproteus"}, {"message": "Pull request here, being reviewed: <a href=\"https://github.com/openhatch/oh-\">https://github.com/openhatch/oh-</a>\nmainline/pull/111\n   \n", "author": "paulproteus"}, {"message": "Uhhh yeah, somebody else should take this. I'm under the C these days, not in Pythonica...\n   \n", "author": "DeadDork"}, {"message": "Next steps for whoever wants to address this:\n\n* Prepare a sample file that uses an extra ./ in the path\n\n* Write a small test case that uses these files and generates the error\n\n* Put all that into a commit something like <a href=\"https://github.com/openhatch/oh-\">https://github.com/openhatch/oh-</a>\nmainline/commit/e7a3294e1e8bb908792b8863203ad9adf6b6af60\n   \n", "author": "paulproteus"}, {"message": "Thank you for your research into this. Excellent, through work!\n\nWhat I'd love to see, given what you've found, is that in the backend, we \ncheck for this posssibility and indicate the problem to the user. \nBasically, that puts us \"in the right\" in terms of not accepting bad \ninput, and also puts us on the right side of pedagogy, where when we know \nwhat mistake a student has made, we help them fix it.\n\nA recent commit along those lines is this: \ne7a3294e1e8bb908792b8863203ad9adf6b6af60\n\nThat error catching should be supported with a test case in the test \nsuite, too.\n\nIs that something I can interest you folks in submitting a patch for?\n   \n", "author": "paulproteus"}, {"message": "Antigen &amp; I tested a variety of scenarios, and determined that this is indeed \nnot a bug.\n\nThe documentation on\n\n&lt;<a href=\"http://openhatch.org/missions/diffpatch/diffrecursive/submit#diffrecursive-\">http://openhatch.org/missions/diffpatch/diffrecursive/submit#diffrecursive-</a>\nform&gt;\n\nsays very clearly: 'It should be possible to apply it [the diff file] with \n\"patch -p1\" from the \"recipes\" directory.'\n\nWhat this means, is that the PATH in the diff header will be offset by one when \nthe patch utility is used. For example, when the PATH is 'a/test.txt' and \n'b/test.txt', respectively for the source and the target files, then the patch \nutility will be trying to change the lines in 'test.txt' of b (again, because \nthe -p1 says to offset by one).\n\nThis is where the issue occurs. If a user, using relative paths, creates a diff \nfile using './a/test.txt' and './b/test.txt', then the '-p1' will offset only to \n'a' and 'b', not to 'test.txt'. That is, it will try to patch 'b/test.txt'. \nSince we are trying to patch a file on the server that is presumably in the form \nof 'a/test.txt', trying to patch 'b/test.txt' will fail--which is what you see.\n\nPedagogically, it is our opinion that the current instructions are a bit vague, \nbut correct, and that this is not bug.\n\nWe suggest that this issue be labeled resolved.\n   \n", "author": "DeadDork"}, {"message": "Awesome -- I take it your next step, DeadDork, is adding tests?\n\nLooking forward to that! And if you need any help with that at all, just get on \nIRC and ping me (paulproteus is my nick). Or email the OH-Dev mailing list. I'm \nalways happy to help (at least, when I'm around (which is most of the time))!\n\n-- Asheesh.\n   \n", "author": "paulproteus"}, {"message": "jesstess asked me to have this assigned to moi! I happily complied!\n   \n", "author": "DeadDork"}, {"message": "I'll add -- it'd be amazing if there were some more structural approach to \nthis, rather than handling it through string processing.\n\nFor example, it seems like os.path.abspath might help here.\n\nBut I'll happily accept any patch that works (preferably along with \nan automated test case).\n\n-- Asheesh.\n   \n", "author": "paulproteus"}, {"message": "This patch looks great. It'd be even better with a test case, which should \nbe fairly easy to add. That way, future refactorings won't lose the \nsupport for this case.\n\nCan I interest you in adding that?\n   \n", "author": "paulproteus"}, {"message": "Whoops, forgot the patch!\n   \n", "author": "jesstess"}, {"message": "Our approach was to remove a leading \"./\" from filenames before processing them.\n\nWe manually tested our changes on a test instance of the website, and we ran the test suite to \nconfirm that all existing tests still pass.\n   \n", "author": "jesstess"}, {"message": "Thanks for filing this! I think it should be a fairly simple issue -- we \nshould probably permit \"./Skillet.txt\" as a valid path in the check, not \njust \"Skillet.txt\".\n   \n", "author": "paulproteus"}, {"message": "in the \"diffing entire directories\" mission submitting the result of \n\"diff -ur ./recipes ./us &gt; ./outputt\" returns \n'Patch does not modify file \"Skillet.txt\", which it should modify.'\nwhereas diff -ur recipes us &gt; ./outputt succeeds\n   \n", "author": "passstab"}]}