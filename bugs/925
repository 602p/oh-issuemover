{"status": "chatting", "priority": "feature", "title": "Support GitHub as a login provider", "milestone": "", "superceder": "", "nosylist": ["onceuponatimeforever, paulproteus"], "assigned": "onceuponatimeforever", "waitingon": "", "keywords": [], "id": "925", "files": [], "history": [{"message": "Oh, interesting.\n\nThen we should upgrade to 1.4!\n   \n", "author": "paulproteus"}, {"message": "Sadly, both the add-ons that I've looked into require Django 1.4 or higher. \n\nI should make a new ticket to upgrade the whole OH project to the latest stable version of Django, which \nis currently at version 1.6.\n   \n", "author": "onceuponatimeforever"}, {"message": "I attempted to integrate the django-allauth add-on without success: \n<a href=\"https://github.com/pennersr/django-allauth\">https://github.com/pennersr/django-allauth</a> Why? Because one of the core Django modules called \ntimezone in allauth requires Django 1.4, while the OH app runs on Django 1.3.\n   \n", "author": "onceuponatimeforever"}, {"message": "Looks like this 3rd party Django add-on for oauth2 is a feasible solution: \n<a href=\"https://github.com/evonove/django-oauth-toolkit\">https://github.com/evonove/django-oauth-toolkit</a>\n   \n", "author": "onceuponatimeforever"}, {"message": "GitHub would be the first of our login providers to use OAuth2, rather than \nOpenID, so there are going to be some implementation complexities here. But they \nshould be fairly easily handled if we use some third-party Django add-on.\n   \n", "author": "paulproteus"}]}