{"status": "resolved", "priority": "feature", "title": "Abstraction of bug importers", "milestone": "", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "", "waitingon": "", "keywords": [], "id": "116", "files": [{"url": "http://openhatch.org/bugs/file57/abstraction_of_Bugzilla_subclasses.patch", "author": "pythonian4000"}, {"url": "http://openhatch.org/bugs/file58/fix_bug_id_boolean_not_set.patch", "author": "pythonian4000"}], "history": [{"message": "Generally quite sane code. Some thoughts:\n\n* I changed type({}) to dict; see f73030a15a420e883730feb3e00ed1ec808ee6bf\n\n* I see a \"FIXME: How do we efficiently implement this?\" in \nmysite/customs/bugtrackers/bugzilla.py as regards removing the \"JJ:\" prefix from \nKDE Junior Jobs bugs. I think it's okay to leave that ugly text in the bugs' \ntitles in OpenHatch for now -- we can use it to prod Lydia from KDE to remove it \nfrom the actual bugs. (-;\n\nFeedback on def generate_project_name(self, bb) -- we should probably just \nremove this from the class we generate.\n\nI'm quite excited that you've changed the Bugzilla tests to use database-based \nBugzilla objects! We could move those out to fixtures, but in-line is okay too.\n\nAs for the views, they look quite good too. At least, in the code. I'll see if I \ncan apply some CSS magic to make it render more nicely. In addition, we'll have \nto think about access control (Right now I think that having the total set of \nbug trackers be editable by all, but logging the edits, would be fine.)\n\nI'm going to push this to a branch on the code.openhatch.org git repository \ncalled \"next\" because it's something I want to get out in a release very soon.\n\nThis is awesome, and I'm closing this bug as \"resolved\". Any specific issues \nwith this code get new bugs and new commits.\n   \n", "author": "paulproteus"}, {"message": "Here is some feedback on the code I see at \n<a href=\"http://git.jackgrigg.com/openhatch/commit/?\">http://git.jackgrigg.com/openhatch/commit/?</a>\nh=bug_importer_metaclasses&amp;id=75147610e7bd367873a46884d36ae3f06d50c377 . I'm \nusing that version of the patches since those are freshly rebased.\n\n* Use the first line of the git commit message as a \"Subject\" line\n\nThis way, it serves as a nice summary. It's okay to have that be a little long; \nthe Linux kernel project likes to keep those super-short, but it's more \nimportant to me that they be a complete idea. So e.g. 80 characters is fine \nthere. To be super-specific, I'd prefer a commit log message like the one at \n<a href=\"http://git.jackgrigg.com/openhatch/commit/?\">http://git.jackgrigg.com/openhatch/commit/?</a>\nh=bug_importer_metaclasses&amp;id=cbb7b62aba2f0e829a01a8801c719905a437239e be one \nline.\n\n* Never change a migration file!\n\nIf you really need to, squash away the old commit so we can't see it. (-: The \nproblem with changing migration files is that if South thinks it's run the \nmigration, it won't re-run it with your changes. So it's better to make a new \nmigration.\n\nFurther feedback coming...\n   \n", "author": "paulproteus"}, {"message": "Whoops! Noticed that bug_id_list_only was never set by the abstract subclass\ngenerator, which would cause problems for trackers like Fedora in that a\nnon-existant method would be called. Fixed in extra patch.\n   \n", "author": "pythonian4000"}, {"message": "This is a bug for tracking the abstraction of the various bug importers.\nEventually we want to be able to add bug trackers through a web interface, and\nabstraction of the tracker-specific information to a model is required.\n\nSpeaking of which, here is a patch which abstracts the Bugzilla importer. It\ntakes information from a model object and creates a subclass for that object\nwhich is identical in function to the current subclasses that are hard-coded\ninto the importer. The old subclasses are left there for now, and can still be\nused in future (trackers that overload the bug project name generator will be\nleft as special cases for now), as the functionality of the actual importer is\nunchanged.\n\nThe next step for the Bugzilla importer is to create a webform from the two\nmodels that hold the tracker-specific data, so we can actually enter all the\ntrackers in - but I will leave that to someone who knows a bit more about the\nhtml side of the site (Asheesh? ^_^)\n   \n", "author": "pythonian4000"}]}