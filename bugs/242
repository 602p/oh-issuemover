{"status": "resolved", "priority": "bug", "title": "Remove the \"Epoch\" code, and switch to using only Timestamps", "milestone": "0.11.03", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "242", "files": [], "history": [{"message": "This looks splendid. I'm pushing it.\n\nThe other change I would make is that your use of str(Bug) could instead be the\nstring, \"When was a bug in the DB last modified or deleted?\" That would make it\neven clearer what the Timestamp is for.\n\nThese Timestamps should maybe (?) live in memcached, and maybe the strings\nshould be named constants so that typos can't make us sad.\n\nThat's for a different bug; one I may never file because it seems like it's not\na big deal.\n\nYay! Thanks for removing my old sucky code.\n   \n", "author": "paulproteus"}, {"message": "All done!\n\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=71ea27131e5354089cd75f15d5f01adab8cdf313\">http://git.jackgrigg.com/openhatch/patch/?id=71ea27131e5354089cd75f15d5f01adab8cdf313</a>\n   \n", "author": "pythonian4000"}, {"message": "A brief history of the \"Epoch\" class:\n\nI (Asheesh) wrote it one day, while Raffi was away. And then over the following\nweeks, he said, \"What is this?\"\n\nAnd then we wrote a new class called Timestamp, which actually makes sense.\n\nSo this ticket is about removing the old, sucky Epoch model, and replacing it\nwith uses of the Timestamp class.\n   \n", "author": "paulproteus"}]}