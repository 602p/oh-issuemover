{"status": "unread", "priority": "bug", "title": "Use a cron job, rather than requests.get(), to update the blog cache", "milestone": "", "superceder": "", "nosylist": ["paulproteus"], "assigned": "", "waitingon": "", "keywords": [], "id": "928", "files": [], "history": [{"message": "Right now, if the list of recent blog posts is empty, we use requests.get() to \nload up the blog feed.\n\nThe problem here is that if the cache is empty, every web worker will try to \nfill it. This leads to massive queuing of inbound requests, which is always bad \nnews.\n\nTherefore, we should be willing to serve from a stale cache. An easy way to do \nthat is to use a file on-disk as the cache, rather than putting it in memcached.\n\nThe frontend could always serve the on-disk data. A cron job, or better, a pub-\nsub-hubbub hook, could update that on-disk data.\n\nOther architecture ideas welcome.\n\nThis addresses a key scalability problem with the site.\n   \n", "author": "paulproteus"}]}