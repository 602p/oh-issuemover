{"status": "resolved", "priority": "urgent", "title": "tar mission tweaks catch-all", "milestone": "", "superceder": "", "nosylist": ["paulproteus, stump, willkahngreene"], "assigned": "stump", "waitingon": "", "keywords": [], "id": "96", "files": [], "history": [{"message": "I've made them bullets, and I also added hints for what specifically to type.\n\nResolved!\n   \n", "author": "paulproteus"}, {"message": "John, what do you think?\n\nSetting to \"urgent\" because I think we should handle this soon. (-:\n   \n", "author": "paulproteus"}, {"message": "It looks good.\n\nPoint 5 doesn't seem to be addressed at all.  I just flubbed the tarball\ncreation mission because the requirements are hard to parse in paragraph form\nand I didn't read it carefully enough.\n\nI'd change the requirements paragraph for the tarball extraction part to be this:\n\n\"\"\"\nYour mission is to:\n\n* download the tarball\n* unpack it\n* find and upload the ghello-0.4/ghello.c file\n\nNote that the tarball is following the conventions mentioned above by using a\nwrapper directory.\n\"\"\"\n\nThe requirements paragraph for the tarball creation part should be:\n\n\"\"\"\nYour mission is to:\n\n* create a myproject-0.1 directory\n* download the files above and place them in the directory\n* in the parent directory, create a gzipped tarball of the myproject-0.1\ndirectory called myproject-0.1.tar.gz\n* upload your tarball\n\"\"\"\n\nThat's much easier to parse.\n\nOut of curiosity, are there reasons for keeping the requirements in paragraph\nform?  Is it better in some way that I'm not thinking of?\n   \n", "author": "willkahngreene"}, {"message": "Good points, Will!\n\nWill, would you go back to <a href=\"http://openhatch.org/missions/\">http://openhatch.org/missions/</a> and tell us what tasks \nremain? John Stumpo (stump) just made a bunch of changes to the Tar mission.\n\nFor example, we did add a link to Wikipedia.\n   \n", "author": "paulproteus"}, {"message": "This is a catch-all for things I noticed (some of which should get fixed) with\nthe tar mission:\n\n1. (nit) The first sentence \"The tar program creates and unpacks archives called\ntarballs\" should probably be \"The tar program creates, unpacks, and manipulates\narchives called tarballs\".\n\n2. The tar command needs more explanation.  Seems like this page is possibly\ntelling people about tar who have never used tar before.  I think this could be\nfixed with examples of usage.\n\n3. If a user is interested in more information, he/she would need links to more\ninformation.  A link to the wikipedia page would be great.  Links to other tar\ndocumentation would also be great.\n\n4. People learn in different ways, so it might be a good idea to additionally\nlink to a screencast on tar usage.  I hoped that FOSSCasts\n(<a href=\"http://fosscasts.com/\">http://fosscasts.com/</a>) would have an episode on tar, but there isn't one.  It'd\nbe cool to ping John about creating one or alternatively find someone else who's\ngood at doing screencasts that are well produced, well scripted, and to the\npoint to do one.  Asheesh mentioned getting a user-contributed one.  That'd work\nas long as it was good.\n\n5. I'd break up the mission paragraphs into bullet points--one for each\nrequirement.  It's easier to parse and more likely a user will fulfill all the\nrequirements.\n\n6. What happens if the user doesn't have tar on his/her system?  For example,\nWindows doesn't come with tar.  Is it outside the scope of these missions to\nexplain how to install tar?  This is kind of a big topic, so I'm not sure what\nthe right answer is.\n\n7. If the user completes the mission and returns to the mission page, there\nshould be a message at the top of the page saying the user has completed the\nmission and telling the user that he/she can do it again if he/she likes (or\nsomething like that).\n\n8. A second part to this mission (or second mission) would be to have the user\ndownload a tarball, extract the files, and upload a README file from the tarball.\n   \n", "author": "willkahngreene"}]}