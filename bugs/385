{"status": "resolved", "priority": "urgent", "title": "Change tracker_name regex in urls.py for the /customs/ URLs to allow anything except /", "milestone": "0.11.04", "superceder": "", "nosylist": ["paulproteus, pythonian4000"], "assigned": "pythonian4000", "waitingon": "", "keywords": [], "id": "385", "files": [], "history": [{"message": "Okay, this is merged and pushed.\n\nAlso, I think that it's fine to have crazy nonsense in the URLs! But it's nicer to \nuse \"slugs\".\n   \n", "author": "paulproteus"}, {"message": "During the migrations from the asynchronous importer code, for some reason South\ncomplained about duplicates. So paulproteus got past it by appending ' (dup)' to\nthe tracker_name field (which needed to be unique). That was fine, but the\ntracker_name regex in urls.py only allowed wordss separated by a space or\nhyphen, so /customs/ is now broken. This patch opens up the tracker_url regex to\nallow anything except a / (so the regex is '[^/]+'):\n<a href=\"http://git.jackgrigg.com/openhatch/patch/?id=95a58427897a045fbc2a78af4b02007480dbfe97\">http://git.jackgrigg.com/openhatch/patch/?id=95a58427897a045fbc2a78af4b02007480dbfe97</a>\n\nThis is not particularly nice. What I would really like to do is limit what\nusers can enter into this field. Or maybe use an auto-generated slug instead,\nand then error back to the user when they try to enter a tracker_name that will\ngenerate a slug that already exists. Actually, we should do both; the slug makes\nthe URLs nice for copy and paste (no spaces), and the limit on characters makes\nauto-generated project names simpler.\n   \n", "author": "pythonian4000"}]}