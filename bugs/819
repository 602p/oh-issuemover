{"status": "resolved", "priority": "urgent", "title": "+projedit for OpenHatch crashes", "milestone": "0.13.09", "superceder": "", "nosylist": ["brittag, jwm, paulproteus"], "assigned": "jwm", "waitingon": "", "keywords": [], "id": "819", "files": [], "history": [{"message": "This is so fixed! Patch applied and deployed and tested.\n   \n", "author": "paulproteus"}, {"message": "I think this all sounds completely reasonable to me.\n\nI'll deploy this, and let the nightly bug crawl fix the DB. (See also discussion\non IRC over the past half hour or so.)\n\nWorking on deploying it now.\n   \n", "author": "paulproteus"}, {"message": "Oh, and I should add that after applying that patch, we'll have to wait for the bug importers to run \nagain, and update all the tracker_type_ids on bugs.\n   \n", "author": "jwm"}, {"message": "Hey, sorry I missed that this bug was still assigned to me. Google's OpenID\nprovider prefers GMail addresses, so it imported the ancient/unused GMail\naddress from my Google Account when I registered, and I never noticed. D'oh.\n\nAnyway, TrackerModel.get_by_name() isn't downcasting its results to the\nTrackerModel subclasses. When core_bugimporters.import_one_bug_item() sets\na Bug's tracker member, it's assigning a generic TrackerModel instance.\n\nThis sets the bug's tracker_type_id to the generic TrackerModel type (from\ndjango_content_type), so Django's content type framework will instantiate\nthe generic TrackerModel on subsequent loads of that bug's tracker. If I\nmanually change the tracker_type_id on all OpenHatch bugs to the id of\nRoundupTrackerModel (from django_content_type), the tracker instances\nreturned to the project page are subclasses, and the page functions\nproperly.\n\nIOW, import_one_bug_item() saves a generic TrackerModel, so subsequent loads\nof that bug's data will (of course) retrieve a generic TrackerModel. When\nI manually fix the tracker_type_id on a Bug, Django starts returning the\nsubclass, as I asked it to.\n\nMake sense?\n\nTherefore, when the edit page calls get_edit_url() on these generic tracker\ninstances, get_edit_url() throws up its hands since it doesn't know how to\nbuild an edit link for a generic TrackerModel.\n\nI _think_ this is fixed by the one line patch below, which seems to do the\nRight Thing when I run:\n\n    mysite.customs.models.TrackerModel.objects.select_subclasses().filter(\n        rounduptrackermodel__tracker_name='OpenHatch')\n\nin the Django shell on the production site, but data snapshots don't\npopulate any of the trackermodel tables, so it's hard to verify locally.\nIf we add the trackermodel tables to data snapshots, we'd have to take care\nwith the django_content_type table, since the autogenerated one in my\nlocal instance has different primary key values than the production site.\n\nThis bug is related to <a href=\"https://openhatch.org/bugs/issue831,\">https://openhatch.org/bugs/issue831,</a> which we talked\nabout at PyCon. After chasing this (bug 819) to ground, I'm not sure moving\nTrackerModel to a mixin will really save us much.\n\nI think we should get rid of the manual registration in all_trackers by\nhaving anything that uses all_trackers iterate through all TrackerModel\nsubclasses instead, and move the per-tracker configuration items (namestr\nand the links to the proper form, urlmodel, and urlform for each tracker\ntype) into class members on those TrackerModel subclasses.\n\nAsheesh, what do you think?\n\n\n--\ndiff --git a/mysite/customs/models.py b/mysite/customs/models.py\nindex c704769..b78f90d 100644\n--- a/mysite/customs/models.py\n+++ b/mysite/customs/models.py\n@@ -196,7 +196,7 @@ class TrackerModel(models.Model):\n         def _pipe_things(a, b):\n             return a | b\n         joined = reduce(_pipe_things, query_parts)\n-        return cls.objects.get(joined)\n+        return cls.objects.select_subclasses().get(joined)\n \n class TrackerQueryModel(models.Model):\n     '''This model just exists to provide a way to grab a QuerySet\n--\n   \n", "author": "jwm"}, {"message": "Poked at this a bunch tonight, think I know the proximate cause. Will write up what I found \nsometime this weekend, time to sleep for now.\n   \n", "author": "jwm"}, {"message": "Hey John, are you interested in fixing this still? It's a complicated interaction \ncaused by having two bug tracker objects with the same name, from what I \nunderstand.\n\nIf not, then I can prioritize it for myself for this month.\n   \n", "author": "paulproteus"}, {"message": "Weird, I just tried <a href=\"https://openhatch.org/+projedit/MCServer\">https://openhatch.org/+projedit/MCServer</a> and that worked fine, while \n<a href=\"http://openhatch.org/+projedit/OpenHatch\">http://openhatch.org/+projedit/OpenHatch</a> still causes a 500 error.\n   \n", "author": "brittag"}, {"message": "This bug is particularly tricky to replicate locally. I add a new test project on the local open hatch site \nand that \"Edit project settings\" link directs me to a valid page where I can edit the project settings.\n   \n", "author": "onceuponatimeforever"}, {"message": "I noticed this bug today. I can get to it by going to a normal project page such as \n<a href=\"https://openhatch.org/projects/OpenHatch\">https://openhatch.org/projects/OpenHatch</a> and then clicking \"Edit project settings\" at the top right \nof the blue central box.\n   \n", "author": "brittag"}, {"message": "Is \"<a href=\"http://openhatch.org/+projedit/OpenHatch\">http://openhatch.org/+projedit/OpenHatch</a>\" even a valid url? How do you get to that page from say, \nthe main home page? I'm not sure I understand the bug.\n   \n", "author": "onceuponatimeforever"}, {"message": "We should probably fix crasher bugs!\n   \n", "author": "paulproteus"}, {"message": "[Monitoring-private] [Kaboom at OH] ERROR (EXTERNAL IP): Internal Server Error:\n/+projedit/OpenHatch\nmr_website at linode.openhatch.org mr_website at linode.openhatch.org\nTue Mar 19 18:28:37 UTC 2013\n\n    Previous message: [Monitoring-private] [Kaboom at OH] Broken INTERNAL link\non openhatch.org\n    Next message: [Monitoring-private] [Kaboom at OH] Broken INTERNAL link on\nopenhatch.org\n    Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]\n\nTraceback (most recent call last):\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/core/handlers/base.py\",\nline 111, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/contrib/auth/decorators.py\",\nline 23, in _wrapped_view\n    return view_func(request, *args, **kwargs)\n\n  File \"/home/deploy/milestone-a.buildout/mysite/project/views.py\", line 405, in\nedit_project\n    request, 'edit_project.html', context, slug=__name__)\n\n  File \"/home/deploy/milestone-a.buildout/mysite/base/decorators.py\", line 67,\nin as_view\n    return render_response(request, template, data)\n\n  File \"/home/deploy/milestone-a.buildout/mysite/base/helpers.py\", line 81, in\nrender_response\n    return django.shortcuts.render_to_response(*args, **kwargs)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/shortcuts/__init__.py\",\nline 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs),\n**httpresponse_kwargs)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/loader.py\",\nline 188, in render_to_string\n    return t.render(context_instance)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 123, in render\n    return self._render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 117, in _render\n    return self.nodelist.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 744, in render\n    bits.append(self.render_node(node, context))\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 757, in render_node\n    return node.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/loader_tags.py\",\nline 127, in render\n    return compiled_parent._render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 117, in _render\n    return self.nodelist.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 744, in render\n    bits.append(self.render_node(node, context))\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 757, in render_node\n    return node.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/loader_tags.py\",\nline 64, in render\n    result = block.nodelist.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 744, in render\n    bits.append(self.render_node(node, context))\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 757, in render_node\n    return node.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/defaulttags.py\",\nline 311, in render\n    return self.nodelist_true.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 744, in render\n    bits.append(self.render_node(node, context))\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 757, in render_node\n    return node.render(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/defaulttags.py\",\nline 227, in render\n    nodelist.append(node.render(context))\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 792, in render\n    output = self.filter_expression.resolve(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 510, in resolve\n    obj = self.var.resolve(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 653, in resolve\n    value = self._resolve_lookup(context)\n\n  File\n\"/home/deploy/milestone-a.buildout/vendor/packages/Django/django/template/base.py\",\nline 698, in _resolve_lookup\n    current = current()\n\n  File \"/home/deploy/milestone-a.buildout/mysite/customs/models.py\", line 169,\nin get_edit_url\n    raise ValueError, (\"The tracker class seems to be misconfigured. \"\n\nValueError: The tracker class seems to be misconfigured. Read the comments\naround this message.\n   \n", "author": "paulproteus"}, {"message": "On the live site, when you go to:\n\n<a href=\"http://openhatch.org/+projedit/OpenHatch\">http://openhatch.org/+projedit/OpenHatch</a>\n\nYou trigger a crash. The error is:\n\nValueError: The tracker class seems to be misconfigured. Read the comments \naround this message.\n\nJohn, can you perhaps figure out what is going on here?\n   \n", "author": "paulproteus"}]}