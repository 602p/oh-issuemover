{"status": "chatting", "priority": "wish", "title": "Generic OpenID provider form does not use https by default", "milestone": "", "superceder": "", "nosylist": ["paulproteus, rafpaf, till"], "assigned": "", "waitingon": "", "keywords": [], "id": "32", "files": [], "history": [{"message": "I guess it is just a matter of philosophy. I would always try to make the secure\nway easier than the insecure way. And with the default option of using \"http\"\ninstead of \"https\", you make it easier to use it less secure than secure,\nbecause I am pretty sure that most users won't care and even use the http-url\ninstead of the https one even if their OpenID provider provides https.\n\nBut if you default to http, maybe to can add some code to test whether https\nworks or the http url redirects to an https one and then store the https one and\nalways use it. Then at least the window of opportunity for an attacker is\nminimized. Alternatively you can also use the https one by default and warn the\nuser if it does not work and ask, whether he wants to use the insecure one. Then\nyou would also make the users aware of the problem.\n   \n", "author": "till"}, {"message": "Till,\n\nSorry we let this sit for so long.\n\nSince many OpenID providers don't support SSL... I don't think it makes sense to \nchange this.\n\nDo you see some way we could make it work?\n   \n", "author": "paulproteus"}, {"message": "The problem is that many OpenID providers don't support SSL.\n\nCreative Commons wrote about some of the security issues here when they were \nconsidering their users' security at \n<a href=\"http://creativecommons.org/weblog/entry/11223\">http://creativecommons.org/weblog/entry/11223</a> (they run an OpenID provider), so \nI see what you mean.\n\nBut since most OpenID providers don't support SSL, we'd be setting users up for \ndisappointment. One way some OpenID providers handle this is that if a user says \nhe is <a href=\"http://example.com/username\">http://example.com/username</a> , the OpenID provider redirects him to \n<a href=\"https://example.com/username\">https://example.com/username</a> .\n\nIt seems best to rely on OpenID providers here for maximum compatibility -- we'd \nask them for an http-based OpenID, and they might return one that instead is \nbased on https. What do you think?\n   \n", "author": "paulproteus"}, {"message": "Since logging in is normally a security relevant task, please use https instead\nof http by default as the prefix for the generic OpenID provider.\n   \n", "author": "till"}]}